

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Mon Nov 06 18:32:35 2023

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	inittext,global,class=CODE,delta=2
    11                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    13                           	psect	maintext,global,class=CODE,split=1,delta=2
    14                           	psect	text1,local,class=CODE,merge=1,delta=2
    15                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    16                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    17                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    18                           	psect	text5,local,class=CODE,merge=1,delta=2
    19                           	psect	intentry,global,class=CODE,delta=2
    20                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    21                           	dabs	1,0x7E,2
    22     0000                     
    23                           ; Generated 22/03/2023 GMT
    24                           ; 
    25                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    26                           ; All rights reserved.
    27                           ; 
    28                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    29                           ; 
    30                           ; Redistribution and use in source and binary forms, with or without modification, are
    31                           ; permitted provided that the following conditions are met:
    32                           ; 
    33                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    34                           ;        conditions and the following disclaimer.
    35                           ; 
    36                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    37                           ;        of conditions and the following disclaimer in the documentation and/or other
    38                           ;        materials provided with the distribution. Publication is not required when
    39                           ;        this file is used in an embedded application.
    40                           ; 
    41                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    42                           ;        software without specific prior written permission.
    43                           ; 
    44                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    45                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    46                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    47                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    48                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    49                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    50                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    51                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    52                           ; 
    53                           ; 
    54                           ; Code-generator required, PIC16F877A Definitions
    55                           ; 
    56                           ; SFR Addresses
    57     0000                     	;# 
    58     0001                     	;# 
    59     0002                     	;# 
    60     0003                     	;# 
    61     0004                     	;# 
    62     0005                     	;# 
    63     0006                     	;# 
    64     0007                     	;# 
    65     0008                     	;# 
    66     0009                     	;# 
    67     000A                     	;# 
    68     000B                     	;# 
    69     000C                     	;# 
    70     000D                     	;# 
    71     000E                     	;# 
    72     000E                     	;# 
    73     000F                     	;# 
    74     0010                     	;# 
    75     0011                     	;# 
    76     0012                     	;# 
    77     0013                     	;# 
    78     0014                     	;# 
    79     0015                     	;# 
    80     0015                     	;# 
    81     0016                     	;# 
    82     0017                     	;# 
    83     0018                     	;# 
    84     0019                     	;# 
    85     001A                     	;# 
    86     001B                     	;# 
    87     001B                     	;# 
    88     001C                     	;# 
    89     001D                     	;# 
    90     001E                     	;# 
    91     001F                     	;# 
    92     0081                     	;# 
    93     0085                     	;# 
    94     0086                     	;# 
    95     0087                     	;# 
    96     0088                     	;# 
    97     0089                     	;# 
    98     008C                     	;# 
    99     008D                     	;# 
   100     008E                     	;# 
   101     0091                     	;# 
   102     0092                     	;# 
   103     0093                     	;# 
   104     0094                     	;# 
   105     0098                     	;# 
   106     0099                     	;# 
   107     009C                     	;# 
   108     009D                     	;# 
   109     009E                     	;# 
   110     009F                     	;# 
   111     010C                     	;# 
   112     010D                     	;# 
   113     010E                     	;# 
   114     010F                     	;# 
   115     018C                     	;# 
   116     018D                     	;# 
   117     0000                     	;# 
   118     0001                     	;# 
   119     0002                     	;# 
   120     0003                     	;# 
   121     0004                     	;# 
   122     0005                     	;# 
   123     0006                     	;# 
   124     0007                     	;# 
   125     0008                     	;# 
   126     0009                     	;# 
   127     000A                     	;# 
   128     000B                     	;# 
   129     000C                     	;# 
   130     000D                     	;# 
   131     000E                     	;# 
   132     000E                     	;# 
   133     000F                     	;# 
   134     0010                     	;# 
   135     0011                     	;# 
   136     0012                     	;# 
   137     0013                     	;# 
   138     0014                     	;# 
   139     0015                     	;# 
   140     0015                     	;# 
   141     0016                     	;# 
   142     0017                     	;# 
   143     0018                     	;# 
   144     0019                     	;# 
   145     001A                     	;# 
   146     001B                     	;# 
   147     001B                     	;# 
   148     001C                     	;# 
   149     001D                     	;# 
   150     001E                     	;# 
   151     001F                     	;# 
   152     0081                     	;# 
   153     0085                     	;# 
   154     0086                     	;# 
   155     0087                     	;# 
   156     0088                     	;# 
   157     0089                     	;# 
   158     008C                     	;# 
   159     008D                     	;# 
   160     008E                     	;# 
   161     0091                     	;# 
   162     0092                     	;# 
   163     0093                     	;# 
   164     0094                     	;# 
   165     0098                     	;# 
   166     0099                     	;# 
   167     009C                     	;# 
   168     009D                     	;# 
   169     009E                     	;# 
   170     009F                     	;# 
   171     010C                     	;# 
   172     010D                     	;# 
   173     010E                     	;# 
   174     010F                     	;# 
   175     018C                     	;# 
   176     018D                     	;# 
   177                           
   178                           	psect	idataBANK0
   179     02EC                     __pidataBANK0:
   180                           
   181                           ;initializer for main@F1019
   182     02EC  34FC               	retlw	252
   183     02ED  3460               	retlw	96
   184     02EE  34DA               	retlw	218
   185     02EF  34F2               	retlw	242
   186     02F0  3466               	retlw	102
   187     02F1  34B6               	retlw	182
   188     02F2  34BE               	retlw	190
   189     02F3  34E0               	retlw	224
   190     02F4  34FE               	retlw	254
   191     02F5  34F6               	retlw	246
   192                           
   193                           	psect	nvBANK0
   194     0040                     __pnvBANK0:
   195     0040                     _preload:
   196     0040                     	ds	2
   197     0042                     _s2:
   198     0042                     	ds	1
   199     0043                     _s1:
   200     0043                     	ds	1
   201     0044                     _m2:
   202     0044                     	ds	1
   203     0045                     _m1:
   204     0045                     	ds	1
   205     0046                     _h2:
   206     0046                     	ds	1
   207     0047                     _h1:
   208     0047                     	ds	1
   209     000E                     _TMR1	set	14
   210     0007                     _PORTC	set	7
   211     0006                     _PORTB	set	6
   212     003D                     _RC5	set	61
   213     003C                     _RC4	set	60
   214     003B                     _RC3	set	59
   215     003A                     _RC2	set	58
   216     0039                     _RC1	set	57
   217     0038                     _RC0	set	56
   218     0080                     _TMR1ON	set	128
   219     005E                     _PEIE	set	94
   220     005F                     _GIE	set	95
   221     0060                     _TMR1IF	set	96
   222     0085                     _T1CKPS1	set	133
   223     0084                     _T1CKPS0	set	132
   224     0081                     _TMR1CS	set	129
   225     0087                     _TRISC	set	135
   226     0086                     _TRISB	set	134
   227     0460                     _TMR1IE	set	1120
   228                           
   229                           	psect	cinit
   230     0011                     start_initialization:	
   231                           ; #config settings
   232                           
   233     0011                     __initialization:
   234                           
   235                           ; Initialize objects allocated to BANK0
   236     0011  1383               	bcf	3,7	;select IRP bank0
   237     0012  3040               	movlw	low (__pdataBANK0+10)
   238     0013  00FD               	movwf	btemp+-1
   239     0014  3002               	movlw	high __pidataBANK0
   240     0015  00FE               	movwf	btemp
   241     0016  30EC               	movlw	low __pidataBANK0
   242     0017  00FF               	movwf	btemp+1
   243     0018  3036               	movlw	low __pdataBANK0
   244     0019  0084               	movwf	4
   245     001A  120A  118A  22DD  120A  118A  	fcall	init_ram0
   246                           
   247                           ; Clear objects allocated to BANK0
   248     001F  01C8               	clrf	__pbssBANK0& (0+127)
   249     0020  01C9               	clrf	(__pbssBANK0+1)& (0+127)
   250                           
   251                           ; Clear objects allocated to COMMON
   252     0021  01FA               	clrf	__pbssCOMMON& (0+127)
   253     0022                     end_of_initialization:	
   254                           ;End of C runtime variable initialization code
   255                           
   256     0022                     __end_of__initialization:
   257     0022  0183               	clrf	3
   258     0023  120A  118A  2826   	ljmp	_main	;jump to C main() function
   259                           
   260                           	psect	bssCOMMON
   261     007A                     __pbssCOMMON:
   262     007A                     _counter:
   263     007A                     	ds	1
   264                           
   265                           	psect	bssBANK0
   266     0048                     __pbssBANK0:
   267     0048                     _second:
   268     0048                     	ds	2
   269                           
   270                           	psect	dataBANK0
   271     0036                     __pdataBANK0:
   272     0036                     main@F1019:
   273     0036                     	ds	10
   274                           
   275                           	psect	inittext
   276     02D9                     init_fetch0:	
   277                           ;	Called with low address in FSR and high address in W
   278                           
   279     02D9  087E               	movf	btemp,w
   280     02DA  008A               	movwf	10
   281     02DB  087F               	movf	btemp+1,w
   282     02DC  0082               	movwf	2
   283     02DD                     init_ram0:	
   284                           ;Called with:
   285                           ;	high address of idata address in btemp 
   286                           ;	low address of idata address in btemp+1 
   287                           ;	low address of data in FSR
   288                           ;	high address + 1 of data in btemp-1
   289                           
   290     02DD  120A  118A  22D9  120A  118A  	fcall	init_fetch0
   291     02E2  0080               	movwf	0
   292     02E3  0A84               	incf	4,f
   293     02E4  0804               	movf	4,w
   294     02E5  067D               	xorwf	btemp+-1,w
   295     02E6  1903               	btfsc	3,2
   296     02E7  3400               	retlw	0
   297     02E8  0AFF               	incf	btemp+1,f
   298     02E9  1903               	btfsc	3,2
   299     02EA  0AFE               	incf	btemp,f
   300     02EB  2ADD               	goto	init_ram0
   301                           
   302                           	psect	cstackCOMMON
   303     0070                     __pcstackCOMMON:
   304     0070                     ?_timer1_timermode:
   305     0070                     ?_ISR:	
   306                           ; 1 bytes @ 0x0
   307                           
   308     0070                     ??_ISR:	
   309                           ; 1 bytes @ 0x0
   310                           
   311     0070                     ?_main:	
   312                           ; 1 bytes @ 0x0
   313                           
   314                           
   315                           ; 1 bytes @ 0x0
   316     0070                     	ds	3
   317     0073                     ??_timer1_timermode:
   318     0073                     ??___aldiv:	
   319                           ; 1 bytes @ 0x3
   320                           
   321     0073                     ?___lwdiv:	
   322                           ; 1 bytes @ 0x3
   323                           
   324     0073                     ___lwdiv@divisor:	
   325                           ; 2 bytes @ 0x3
   326                           
   327                           
   328                           ; 2 bytes @ 0x3
   329     0073                     	ds	1
   330     0074                     ___aldiv@counter:
   331                           
   332                           ; 1 bytes @ 0x4
   333     0074                     	ds	1
   334     0075                     timer1_timermode@preloaded:
   335     0075                     ___aldiv@sign:	
   336                           ; 1 bytes @ 0x5
   337                           
   338     0075                     ___lwdiv@dividend:	
   339                           ; 1 bytes @ 0x5
   340                           
   341                           
   342                           ; 2 bytes @ 0x5
   343     0075                     	ds	1
   344     0076                     ___aldiv@quotient:
   345                           
   346                           ; 4 bytes @ 0x6
   347     0076                     	ds	1
   348     0077                     ??___lwdiv:
   349     0077                     ___lwdiv@quotient:	
   350                           ; 1 bytes @ 0x7
   351                           
   352                           
   353                           ; 2 bytes @ 0x7
   354     0077                     	ds	2
   355     0079                     ___lwdiv@counter:
   356                           
   357                           ; 1 bytes @ 0x9
   358     0079                     	ds	1
   359     007A                     ??___lwmod:
   360                           
   361                           	psect	cstackBANK0
   362     0020                     __pcstackBANK0:	
   363                           ; 1 bytes @ 0xA
   364                           
   365     0020                     ?___lwmod:
   366     0020                     ?___aldiv:	
   367                           ; 2 bytes @ 0x0
   368                           
   369     0020                     ___lwmod@divisor:	
   370                           ; 4 bytes @ 0x0
   371                           
   372     0020                     ___aldiv@divisor:	
   373                           ; 2 bytes @ 0x0
   374                           
   375                           
   376                           ; 4 bytes @ 0x0
   377     0020                     	ds	2
   378     0022                     ___lwmod@dividend:
   379                           
   380                           ; 2 bytes @ 0x2
   381     0022                     	ds	2
   382     0024                     ___lwmod@counter:
   383     0024                     ___aldiv@dividend:	
   384                           ; 1 bytes @ 0x4
   385                           
   386                           
   387                           ; 4 bytes @ 0x4
   388     0024                     	ds	4
   389     0028                     ??_main:
   390                           
   391                           ; 1 bytes @ 0x8
   392     0028                     	ds	4
   393     002C                     main@hex_seg:
   394                           
   395                           ; 10 bytes @ 0xC
   396     002C                     	ds	10
   397                           
   398                           	psect	maintext
   399     0026                     __pmaintext:	
   400 ;;
   401 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
   402 ;;
   403 ;; *************** function _main *****************
   404 ;; Defined at:
   405 ;;		line 44 in file "main.c"
   406 ;; Parameters:    Size  Location     Type
   407 ;;		None
   408 ;; Auto vars:     Size  Location     Type
   409 ;;  hex_seg        10   12[BANK0 ] unsigned char [10]
   410 ;; Return value:  Size  Location     Type
   411 ;;                  1    wreg      void 
   412 ;; Registers used:
   413 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   414 ;; Tracked objects:
   415 ;;		On entry : B00/0
   416 ;;		On exit  : 0/0
   417 ;;		Unchanged: 0/0
   418 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   419 ;;      Params:         0       0       0       0       0
   420 ;;      Locals:         0      10       0       0       0
   421 ;;      Temps:          0       4       0       0       0
   422 ;;      Totals:         0      14       0       0       0
   423 ;;Total ram usage:       14 bytes
   424 ;; Hardware stack levels required when called: 2
   425 ;; This function calls:
   426 ;;		___aldiv
   427 ;;		___lwdiv
   428 ;;		___lwmod
   429 ;;		_timer1_timermode
   430 ;; This function is called by:
   431 ;;		Startup code after reset
   432 ;; This function uses a non-reentrant model
   433 ;;
   434                           
   435     0026                     _main:	
   436                           ;psect for function _main
   437                           
   438     0026                     l1071:	
   439                           ;incstack = 0
   440                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   441                           
   442                           
   443                           ;main.c: 46:     uint8_t hex_seg[] = {0xFC,0x60,0xDA,0xF2,0x66,0xB6,0xBE,0xE0,0xFE,0xF6}
      +                          ;
   444     0026  302C               	movlw	main@hex_seg& (0+255)
   445     0027  0084               	movwf	4
   446     0028  3036               	movlw	low main@F1019
   447     0029  1283               	bcf	3,5	;RP0=0, select bank0
   448     002A  1303               	bcf	3,6	;RP1=0, select bank0
   449     002B  00A8               	movwf	??_main
   450     002C  0804               	movf	4,w
   451     002D  00A9               	movwf	??_main+1
   452     002E  300A               	movlw	10
   453     002F  00AA               	movwf	??_main+2
   454     0030                     u690:
   455     0030  0828               	movf	??_main,w
   456     0031  0084               	movwf	4
   457     0032  1383               	bcf	3,7	;select IRP bank0
   458     0033  0800               	movf	0,w
   459     0034  00AB               	movwf	??_main+3
   460     0035  0AA8               	incf	??_main,f
   461     0036  0829               	movf	??_main+1,w
   462     0037  0084               	movwf	4
   463     0038  082B               	movf	??_main+3,w
   464     0039  0080               	movwf	0
   465     003A  0AA9               	incf	??_main+1,f
   466     003B  0BAA               	decfsz	??_main+2,f
   467     003C  2830               	goto	u690
   468     003D                     l1073:
   469                           
   470                           ;main.c: 47:     TRISB = 0x00;
   471     003D  1683               	bsf	3,5	;RP0=1, select bank1
   472     003E  1303               	bcf	3,6	;RP1=0, select bank1
   473     003F  0186               	clrf	6	;volatile
   474     0040                     l1075:
   475                           
   476                           ;main.c: 48:     PORTB = 0x00;
   477     0040  1283               	bcf	3,5	;RP0=0, select bank0
   478     0041  1303               	bcf	3,6	;RP1=0, select bank0
   479     0042  0186               	clrf	6	;volatile
   480     0043                     l1077:
   481                           
   482                           ;main.c: 49:     TRISC = 0x00;
   483     0043  1683               	bsf	3,5	;RP0=1, select bank1
   484     0044  1303               	bcf	3,6	;RP1=0, select bank1
   485     0045  0187               	clrf	7	;volatile
   486     0046                     l1079:
   487                           
   488                           ;main.c: 50:     PORTC = 0x3F;
   489     0046  303F               	movlw	63
   490     0047  1283               	bcf	3,5	;RP0=0, select bank0
   491     0048  1303               	bcf	3,6	;RP1=0, select bank0
   492     0049  0087               	movwf	7	;volatile
   493     004A                     l1081:
   494                           
   495                           ;main.c: 51:     preload = 15536;
   496     004A  30B0               	movlw	176
   497     004B  00C0               	movwf	_preload
   498     004C  303C               	movlw	60
   499     004D  00C1               	movwf	_preload+1
   500     004E                     l1083:
   501                           
   502                           ;main.c: 52:     timer1_timermode(preload);
   503     004E  0840               	movf	_preload,w
   504     004F  120A  118A  22C2  120A  118A  	fcall	_timer1_timermode
   505     0054                     l1085:
   506                           
   507                           ;main.c: 54:         h1 = second / 100000;
   508     0054  3000               	movlw	0
   509     0055  1283               	bcf	3,5	;RP0=0, select bank0
   510     0056  1303               	bcf	3,6	;RP1=0, select bank0
   511     0057  00A3               	movwf	___aldiv@divisor+3
   512     0058  3001               	movlw	1
   513     0059  00A2               	movwf	___aldiv@divisor+2
   514     005A  3086               	movlw	134
   515     005B  00A1               	movwf	___aldiv@divisor+1
   516     005C  30A0               	movlw	160
   517     005D  00A0               	movwf	___aldiv@divisor
   518     005E  0848               	movf	_second,w
   519     005F  00A4               	movwf	___aldiv@dividend
   520     0060  0849               	movf	_second+1,w
   521     0061  00A5               	movwf	___aldiv@dividend+1
   522     0062  01A6               	clrf	___aldiv@dividend+2
   523     0063  01A7               	clrf	___aldiv@dividend+3
   524     0064  120A  118A  2180  120A  118A  	fcall	___aldiv
   525     0069  1283               	bcf	3,5	;RP0=0, select bank0
   526     006A  1303               	bcf	3,6	;RP1=0, select bank0
   527     006B  0820               	movf	?___aldiv,w
   528     006C  00C7               	movwf	_h1
   529     006D                     l1087:
   530                           
   531                           ;main.c: 55:         h2 = ((second / 10000)%10);
   532     006D  300A               	movlw	10
   533     006E  00A0               	movwf	___lwmod@divisor
   534     006F  3000               	movlw	0
   535     0070  00A1               	movwf	___lwmod@divisor+1
   536     0071  3010               	movlw	16
   537     0072  00F3               	movwf	___lwdiv@divisor
   538     0073  3027               	movlw	39
   539     0074  00F4               	movwf	___lwdiv@divisor+1
   540     0075  0849               	movf	_second+1,w
   541     0076  00F6               	movwf	___lwdiv@dividend+1
   542     0077  0848               	movf	_second,w
   543     0078  00F5               	movwf	___lwdiv@dividend
   544     0079  120A  118A  221D  120A  118A  	fcall	___lwdiv
   545     007E  0874               	movf	?___lwdiv+1,w
   546     007F  1283               	bcf	3,5	;RP0=0, select bank0
   547     0080  1303               	bcf	3,6	;RP1=0, select bank0
   548     0081  00A3               	movwf	___lwmod@dividend+1
   549     0082  0873               	movf	?___lwdiv,w
   550     0083  00A2               	movwf	___lwmod@dividend
   551     0084  120A  118A  2261  120A  118A  	fcall	___lwmod
   552     0089  1283               	bcf	3,5	;RP0=0, select bank0
   553     008A  1303               	bcf	3,6	;RP1=0, select bank0
   554     008B  0820               	movf	?___lwmod,w
   555     008C  00C6               	movwf	_h2
   556     008D                     l1089:
   557                           
   558                           ;main.c: 56:         m1 = ((second / 1000)%10);
   559     008D  300A               	movlw	10
   560     008E  00A0               	movwf	___lwmod@divisor
   561     008F  3000               	movlw	0
   562     0090  00A1               	movwf	___lwmod@divisor+1
   563     0091  30E8               	movlw	232
   564     0092  00F3               	movwf	___lwdiv@divisor
   565     0093  3003               	movlw	3
   566     0094  00F4               	movwf	___lwdiv@divisor+1
   567     0095  0849               	movf	_second+1,w
   568     0096  00F6               	movwf	___lwdiv@dividend+1
   569     0097  0848               	movf	_second,w
   570     0098  00F5               	movwf	___lwdiv@dividend
   571     0099  120A  118A  221D  120A  118A  	fcall	___lwdiv
   572     009E  0874               	movf	?___lwdiv+1,w
   573     009F  1283               	bcf	3,5	;RP0=0, select bank0
   574     00A0  1303               	bcf	3,6	;RP1=0, select bank0
   575     00A1  00A3               	movwf	___lwmod@dividend+1
   576     00A2  0873               	movf	?___lwdiv,w
   577     00A3  00A2               	movwf	___lwmod@dividend
   578     00A4  120A  118A  2261  120A  118A  	fcall	___lwmod
   579     00A9  1283               	bcf	3,5	;RP0=0, select bank0
   580     00AA  1303               	bcf	3,6	;RP1=0, select bank0
   581     00AB  0820               	movf	?___lwmod,w
   582     00AC  00C5               	movwf	_m1
   583     00AD                     l1091:
   584                           
   585                           ;main.c: 57:         m2 = ((second / 100)%10);
   586     00AD  300A               	movlw	10
   587     00AE  00A0               	movwf	___lwmod@divisor
   588     00AF  3000               	movlw	0
   589     00B0  00A1               	movwf	___lwmod@divisor+1
   590     00B1  3064               	movlw	100
   591     00B2  00F3               	movwf	___lwdiv@divisor
   592     00B3  3000               	movlw	0
   593     00B4  00F4               	movwf	___lwdiv@divisor+1
   594     00B5  0849               	movf	_second+1,w
   595     00B6  00F6               	movwf	___lwdiv@dividend+1
   596     00B7  0848               	movf	_second,w
   597     00B8  00F5               	movwf	___lwdiv@dividend
   598     00B9  120A  118A  221D  120A  118A  	fcall	___lwdiv
   599     00BE  0874               	movf	?___lwdiv+1,w
   600     00BF  1283               	bcf	3,5	;RP0=0, select bank0
   601     00C0  1303               	bcf	3,6	;RP1=0, select bank0
   602     00C1  00A3               	movwf	___lwmod@dividend+1
   603     00C2  0873               	movf	?___lwdiv,w
   604     00C3  00A2               	movwf	___lwmod@dividend
   605     00C4  120A  118A  2261  120A  118A  	fcall	___lwmod
   606     00C9  1283               	bcf	3,5	;RP0=0, select bank0
   607     00CA  1303               	bcf	3,6	;RP1=0, select bank0
   608     00CB  0820               	movf	?___lwmod,w
   609     00CC  00C4               	movwf	_m2
   610     00CD                     l1093:
   611                           
   612                           ;main.c: 58:         s1 = ((second / 10)%10);
   613     00CD  300A               	movlw	10
   614     00CE  00A0               	movwf	___lwmod@divisor
   615     00CF  3000               	movlw	0
   616     00D0  00A1               	movwf	___lwmod@divisor+1
   617     00D1  300A               	movlw	10
   618     00D2  00F3               	movwf	___lwdiv@divisor
   619     00D3  3000               	movlw	0
   620     00D4  00F4               	movwf	___lwdiv@divisor+1
   621     00D5  0849               	movf	_second+1,w
   622     00D6  00F6               	movwf	___lwdiv@dividend+1
   623     00D7  0848               	movf	_second,w
   624     00D8  00F5               	movwf	___lwdiv@dividend
   625     00D9  120A  118A  221D  120A  118A  	fcall	___lwdiv
   626     00DE  0874               	movf	?___lwdiv+1,w
   627     00DF  1283               	bcf	3,5	;RP0=0, select bank0
   628     00E0  1303               	bcf	3,6	;RP1=0, select bank0
   629     00E1  00A3               	movwf	___lwmod@dividend+1
   630     00E2  0873               	movf	?___lwdiv,w
   631     00E3  00A2               	movwf	___lwmod@dividend
   632     00E4  120A  118A  2261  120A  118A  	fcall	___lwmod
   633     00E9  1283               	bcf	3,5	;RP0=0, select bank0
   634     00EA  1303               	bcf	3,6	;RP1=0, select bank0
   635     00EB  0820               	movf	?___lwmod,w
   636     00EC  00C3               	movwf	_s1
   637     00ED                     l1095:
   638                           
   639                           ;main.c: 59:         s2 = second % 10;
   640     00ED  300A               	movlw	10
   641     00EE  00A0               	movwf	___lwmod@divisor
   642     00EF  3000               	movlw	0
   643     00F0  00A1               	movwf	___lwmod@divisor+1
   644     00F1  0849               	movf	_second+1,w
   645     00F2  00A3               	movwf	___lwmod@dividend+1
   646     00F3  0848               	movf	_second,w
   647     00F4  00A2               	movwf	___lwmod@dividend
   648     00F5  120A  118A  2261  120A  118A  	fcall	___lwmod
   649     00FA  1283               	bcf	3,5	;RP0=0, select bank0
   650     00FB  1303               	bcf	3,6	;RP1=0, select bank0
   651     00FC  0820               	movf	?___lwmod,w
   652     00FD  00C2               	movwf	_s2
   653     00FE                     l1097:
   654                           
   655                           ;main.c: 60:         PORTB = hex_seg[h1];
   656     00FE  0847               	movf	_h1,w
   657     00FF  3E2C               	addlw	(low (main@hex_seg| 0))& (0+255)
   658     0100  0084               	movwf	4
   659     0101  1383               	bcf	3,7	;select IRP bank0
   660     0102  0800               	movf	0,w
   661     0103  0086               	movwf	6	;volatile
   662     0104                     l1099:
   663                           
   664                           ;main.c: 61:         RC0 = 0;
   665     0104  1007               	bcf	7,0	;volatile
   666     0105                     l1101:
   667                           
   668                           ;main.c: 62:         _delay((unsigned long)((5)*(4000000/4000.0)));
   669     0105  3007               	movlw	7
   670     0106  1283               	bcf	3,5	;RP0=0, select bank0
   671     0107  1303               	bcf	3,6	;RP1=0, select bank0
   672     0108  00A9               	movwf	??_main+1
   673     0109  307C               	movlw	124
   674     010A  00A8               	movwf	??_main
   675     010B                     u707:
   676     010B  0BA8               	decfsz	??_main,f
   677     010C  290B               	goto	u707
   678     010D  0BA9               	decfsz	??_main+1,f
   679     010E  290B               	goto	u707
   680     010F  0000               	nop
   681     0110                     l1103:
   682                           
   683                           ;main.c: 63:         RC0 = 1;
   684     0110  1283               	bcf	3,5	;RP0=0, select bank0
   685     0111  1303               	bcf	3,6	;RP1=0, select bank0
   686     0112  1407               	bsf	7,0	;volatile
   687     0113                     l1105:
   688                           
   689                           ;main.c: 64:         PORTB = hex_seg[h2];
   690     0113  0846               	movf	_h2,w
   691     0114  3E2C               	addlw	(low (main@hex_seg| 0))& (0+255)
   692     0115  0084               	movwf	4
   693     0116  1383               	bcf	3,7	;select IRP bank0
   694     0117  0800               	movf	0,w
   695     0118  0086               	movwf	6	;volatile
   696     0119                     l1107:
   697                           
   698                           ;main.c: 65:         RC1 = 0;
   699     0119  1087               	bcf	7,1	;volatile
   700     011A                     l1109:
   701                           
   702                           ;main.c: 66:         _delay((unsigned long)((5)*(4000000/4000.0)));
   703     011A  3007               	movlw	7
   704     011B  1283               	bcf	3,5	;RP0=0, select bank0
   705     011C  1303               	bcf	3,6	;RP1=0, select bank0
   706     011D  00A9               	movwf	??_main+1
   707     011E  307C               	movlw	124
   708     011F  00A8               	movwf	??_main
   709     0120                     u717:
   710     0120  0BA8               	decfsz	??_main,f
   711     0121  2920               	goto	u717
   712     0122  0BA9               	decfsz	??_main+1,f
   713     0123  2920               	goto	u717
   714     0124  0000               	nop
   715     0125                     l1111:
   716                           
   717                           ;main.c: 67:         RC1 = 1;
   718     0125  1283               	bcf	3,5	;RP0=0, select bank0
   719     0126  1303               	bcf	3,6	;RP1=0, select bank0
   720     0127  1487               	bsf	7,1	;volatile
   721     0128                     l1113:
   722                           
   723                           ;main.c: 68:         PORTB = hex_seg[m1];
   724     0128  0845               	movf	_m1,w
   725     0129  3E2C               	addlw	(low (main@hex_seg| 0))& (0+255)
   726     012A  0084               	movwf	4
   727     012B  1383               	bcf	3,7	;select IRP bank0
   728     012C  0800               	movf	0,w
   729     012D  0086               	movwf	6	;volatile
   730     012E                     l1115:
   731                           
   732                           ;main.c: 69:         RC2 = 0;
   733     012E  1107               	bcf	7,2	;volatile
   734     012F                     l1117:
   735                           
   736                           ;main.c: 70:         _delay((unsigned long)((5)*(4000000/4000.0)));
   737     012F  3007               	movlw	7
   738     0130  1283               	bcf	3,5	;RP0=0, select bank0
   739     0131  1303               	bcf	3,6	;RP1=0, select bank0
   740     0132  00A9               	movwf	??_main+1
   741     0133  307C               	movlw	124
   742     0134  00A8               	movwf	??_main
   743     0135                     u727:
   744     0135  0BA8               	decfsz	??_main,f
   745     0136  2935               	goto	u727
   746     0137  0BA9               	decfsz	??_main+1,f
   747     0138  2935               	goto	u727
   748     0139  0000               	nop
   749     013A                     l1119:
   750                           
   751                           ;main.c: 71:         RC2 = 1;
   752     013A  1283               	bcf	3,5	;RP0=0, select bank0
   753     013B  1303               	bcf	3,6	;RP1=0, select bank0
   754     013C  1507               	bsf	7,2	;volatile
   755     013D                     l1121:
   756                           
   757                           ;main.c: 72:         PORTB = hex_seg[m2];
   758     013D  0844               	movf	_m2,w
   759     013E  3E2C               	addlw	(low (main@hex_seg| 0))& (0+255)
   760     013F  0084               	movwf	4
   761     0140  1383               	bcf	3,7	;select IRP bank0
   762     0141  0800               	movf	0,w
   763     0142  0086               	movwf	6	;volatile
   764     0143                     l1123:
   765                           
   766                           ;main.c: 73:         RC3 = 0;
   767     0143  1187               	bcf	7,3	;volatile
   768     0144                     l1125:
   769                           
   770                           ;main.c: 74:         _delay((unsigned long)((5)*(4000000/4000.0)));
   771     0144  3007               	movlw	7
   772     0145  1283               	bcf	3,5	;RP0=0, select bank0
   773     0146  1303               	bcf	3,6	;RP1=0, select bank0
   774     0147  00A9               	movwf	??_main+1
   775     0148  307C               	movlw	124
   776     0149  00A8               	movwf	??_main
   777     014A                     u737:
   778     014A  0BA8               	decfsz	??_main,f
   779     014B  294A               	goto	u737
   780     014C  0BA9               	decfsz	??_main+1,f
   781     014D  294A               	goto	u737
   782     014E  0000               	nop
   783     014F                     l1127:
   784                           
   785                           ;main.c: 75:         RC3 = 1;
   786     014F  1283               	bcf	3,5	;RP0=0, select bank0
   787     0150  1303               	bcf	3,6	;RP1=0, select bank0
   788     0151  1587               	bsf	7,3	;volatile
   789     0152                     l1129:
   790                           
   791                           ;main.c: 76:         PORTB = hex_seg[s1];
   792     0152  0843               	movf	_s1,w
   793     0153  3E2C               	addlw	(low (main@hex_seg| 0))& (0+255)
   794     0154  0084               	movwf	4
   795     0155  1383               	bcf	3,7	;select IRP bank0
   796     0156  0800               	movf	0,w
   797     0157  0086               	movwf	6	;volatile
   798     0158                     l1131:
   799                           
   800                           ;main.c: 77:         RC4 = 0;
   801     0158  1207               	bcf	7,4	;volatile
   802     0159                     l1133:
   803                           
   804                           ;main.c: 78:         _delay((unsigned long)((5)*(4000000/4000.0)));
   805     0159  3007               	movlw	7
   806     015A  1283               	bcf	3,5	;RP0=0, select bank0
   807     015B  1303               	bcf	3,6	;RP1=0, select bank0
   808     015C  00A9               	movwf	??_main+1
   809     015D  307C               	movlw	124
   810     015E  00A8               	movwf	??_main
   811     015F                     u747:
   812     015F  0BA8               	decfsz	??_main,f
   813     0160  295F               	goto	u747
   814     0161  0BA9               	decfsz	??_main+1,f
   815     0162  295F               	goto	u747
   816     0163  0000               	nop
   817     0164                     l1135:
   818                           
   819                           ;main.c: 79:         RC4 = 1;
   820     0164  1283               	bcf	3,5	;RP0=0, select bank0
   821     0165  1303               	bcf	3,6	;RP1=0, select bank0
   822     0166  1607               	bsf	7,4	;volatile
   823     0167                     l1137:
   824                           
   825                           ;main.c: 80:         PORTB = hex_seg[s2];
   826     0167  0842               	movf	_s2,w
   827     0168  3E2C               	addlw	(low (main@hex_seg| 0))& (0+255)
   828     0169  0084               	movwf	4
   829     016A  1383               	bcf	3,7	;select IRP bank0
   830     016B  0800               	movf	0,w
   831     016C  0086               	movwf	6	;volatile
   832     016D                     l1139:
   833                           
   834                           ;main.c: 81:         RC5 = 0;
   835     016D  1287               	bcf	7,5	;volatile
   836     016E                     l1141:
   837                           
   838                           ;main.c: 82:         _delay((unsigned long)((5)*(4000000/4000.0)));
   839     016E  3007               	movlw	7
   840     016F  1283               	bcf	3,5	;RP0=0, select bank0
   841     0170  1303               	bcf	3,6	;RP1=0, select bank0
   842     0171  00A9               	movwf	??_main+1
   843     0172  307C               	movlw	124
   844     0173  00A8               	movwf	??_main
   845     0174                     u757:
   846     0174  0BA8               	decfsz	??_main,f
   847     0175  2974               	goto	u757
   848     0176  0BA9               	decfsz	??_main+1,f
   849     0177  2974               	goto	u757
   850     0178  0000               	nop
   851     0179                     l1143:
   852                           
   853                           ;main.c: 83:         RC5 = 1;
   854     0179  1283               	bcf	3,5	;RP0=0, select bank0
   855     017A  1303               	bcf	3,6	;RP1=0, select bank0
   856     017B  1687               	bsf	7,5	;volatile
   857     017C  2854               	goto	l1085
   858     017D  120A  118A  280E   	ljmp	start
   859     0180                     __end_of_main:
   860                           
   861                           	psect	text1
   862     02C2                     __ptext1:	
   863 ;; *************** function _timer1_timermode *****************
   864 ;; Defined at:
   865 ;;		line 20 in file "main.c"
   866 ;; Parameters:    Size  Location     Type
   867 ;;  preloaded       1    wreg     unsigned char 
   868 ;; Auto vars:     Size  Location     Type
   869 ;;  preloaded       1    5[COMMON] unsigned char 
   870 ;; Return value:  Size  Location     Type
   871 ;;                  1    wreg      void 
   872 ;; Registers used:
   873 ;;		wreg
   874 ;; Tracked objects:
   875 ;;		On entry : 0/0
   876 ;;		On exit  : 0/0
   877 ;;		Unchanged: 0/0
   878 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   879 ;;      Params:         0       0       0       0       0
   880 ;;      Locals:         1       0       0       0       0
   881 ;;      Temps:          2       0       0       0       0
   882 ;;      Totals:         3       0       0       0       0
   883 ;;Total ram usage:        3 bytes
   884 ;; Hardware stack levels used: 1
   885 ;; Hardware stack levels required when called: 1
   886 ;; This function calls:
   887 ;;		Nothing
   888 ;; This function is called by:
   889 ;;		_main
   890 ;; This function uses a non-reentrant model
   891 ;;
   892                           
   893     02C2                     _timer1_timermode:	
   894                           ;psect for function _timer1_timermode
   895                           
   896                           
   897                           ;incstack = 0
   898                           ; Regs used in _timer1_timermode: [wreg]
   899                           ;timer1_timermode@preloaded stored from wreg
   900     02C2  00F5               	movwf	timer1_timermode@preloaded
   901     02C3                     l815:
   902                           
   903                           ;main.c: 21:     TMR1CS = 0;
   904     02C3  1283               	bcf	3,5	;RP0=0, select bank0
   905     02C4  1303               	bcf	3,6	;RP1=0, select bank0
   906     02C5  1090               	bcf	16,1	;volatile
   907                           
   908                           ;main.c: 22:     T1CKPS0 = 0;
   909     02C6  1210               	bcf	16,4	;volatile
   910                           
   911                           ;main.c: 23:     T1CKPS1 = 0;
   912     02C7  1290               	bcf	16,5	;volatile
   913     02C8                     l817:
   914                           
   915                           ;main.c: 24:     TMR1 = preloaded;
   916     02C8  0875               	movf	timer1_timermode@preloaded,w
   917     02C9  00F3               	movwf	??_timer1_timermode
   918     02CA  01F4               	clrf	??_timer1_timermode+1
   919     02CB  0873               	movf	??_timer1_timermode,w
   920     02CC  008E               	movwf	14	;volatile
   921     02CD  0874               	movf	??_timer1_timermode+1,w
   922     02CE  008F               	movwf	15	;volatile
   923     02CF                     l819:
   924                           
   925                           ;main.c: 25:     TMR1IE = 1;
   926     02CF  1683               	bsf	3,5	;RP0=1, select bank1
   927     02D0  1303               	bcf	3,6	;RP1=0, select bank1
   928     02D1  140C               	bsf	12,0	;volatile
   929     02D2                     l821:
   930                           
   931                           ;main.c: 26:     TMR1IF = 0;
   932     02D2  1283               	bcf	3,5	;RP0=0, select bank0
   933     02D3  1303               	bcf	3,6	;RP1=0, select bank0
   934     02D4  100C               	bcf	12,0	;volatile
   935     02D5                     l823:
   936                           
   937                           ;main.c: 27:     GIE = 1;
   938     02D5  178B               	bsf	11,7	;volatile
   939     02D6                     l825:
   940                           
   941                           ;main.c: 28:     PEIE = 1;
   942     02D6  170B               	bsf	11,6	;volatile
   943     02D7                     l827:
   944                           
   945                           ;main.c: 29:     TMR1ON = 1;
   946     02D7  1410               	bsf	16,0	;volatile
   947     02D8                     l61:
   948     02D8  0008               	return
   949     02D9                     __end_of_timer1_timermode:
   950                           
   951                           	psect	text2
   952     0261                     __ptext2:	
   953 ;; *************** function ___lwmod *****************
   954 ;; Defined at:
   955 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\lwmod.c"
   956 ;; Parameters:    Size  Location     Type
   957 ;;  divisor         2    0[BANK0 ] unsigned int 
   958 ;;  dividend        2    2[BANK0 ] unsigned int 
   959 ;; Auto vars:     Size  Location     Type
   960 ;;  counter         1    4[BANK0 ] unsigned char 
   961 ;; Return value:  Size  Location     Type
   962 ;;                  2    0[BANK0 ] unsigned int 
   963 ;; Registers used:
   964 ;;		wreg, status,2, status,0, btemp+1
   965 ;; Tracked objects:
   966 ;;		On entry : 0/0
   967 ;;		On exit  : 0/0
   968 ;;		Unchanged: 0/0
   969 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   970 ;;      Params:         0       4       0       0       0
   971 ;;      Locals:         0       1       0       0       0
   972 ;;      Temps:          0       0       0       0       0
   973 ;;      Totals:         0       5       0       0       0
   974 ;;Total ram usage:        5 bytes
   975 ;; Hardware stack levels used: 1
   976 ;; Hardware stack levels required when called: 1
   977 ;; This function calls:
   978 ;;		Nothing
   979 ;; This function is called by:
   980 ;;		_main
   981 ;; This function uses a non-reentrant model
   982 ;;
   983                           
   984     0261                     ___lwmod:	
   985                           ;psect for function ___lwmod
   986                           
   987     0261                     l1049:	
   988                           ;incstack = 0
   989                           ; Regs used in ___lwmod: [wreg+status,2+status,0+btemp+1]
   990                           
   991     0261  1283               	bcf	3,5	;RP0=0, select bank0
   992     0262  1303               	bcf	3,6	;RP1=0, select bank0
   993     0263  0820               	movf	___lwmod@divisor,w
   994     0264  0421               	iorwf	___lwmod@divisor+1,w
   995     0265  1903               	btfsc	3,2
   996     0266  2A68               	goto	u631
   997     0267  2A69               	goto	u630
   998     0268                     u631:
   999     0268  2A98               	goto	l1067
  1000     0269                     u630:
  1001     0269                     l1051:
  1002     0269  01A4               	clrf	___lwmod@counter
  1003     026A  0AA4               	incf	___lwmod@counter,f
  1004     026B  2A77               	goto	l1057
  1005     026C                     l1053:
  1006     026C  3001               	movlw	1
  1007     026D                     u645:
  1008     026D  1003               	clrc
  1009     026E  0DA0               	rlf	___lwmod@divisor,f
  1010     026F  0DA1               	rlf	___lwmod@divisor+1,f
  1011     0270  3EFF               	addlw	-1
  1012     0271  1D03               	skipz
  1013     0272  2A6D               	goto	u645
  1014     0273                     l1055:
  1015     0273  3001               	movlw	1
  1016     0274  00FF               	movwf	btemp+1
  1017     0275  087F               	movf	btemp+1,w
  1018     0276  07A4               	addwf	___lwmod@counter,f
  1019     0277                     l1057:
  1020     0277  1FA1               	btfss	___lwmod@divisor+1,7
  1021     0278  2A7A               	goto	u651
  1022     0279  2A7B               	goto	u650
  1023     027A                     u651:
  1024     027A  2A6C               	goto	l1053
  1025     027B                     u650:
  1026     027B                     l1059:
  1027     027B  0821               	movf	___lwmod@divisor+1,w
  1028     027C  0223               	subwf	___lwmod@dividend+1,w
  1029     027D  1D03               	skipz
  1030     027E  2A81               	goto	u665
  1031     027F  0820               	movf	___lwmod@divisor,w
  1032     0280  0222               	subwf	___lwmod@dividend,w
  1033     0281                     u665:
  1034     0281  1C03               	skipc
  1035     0282  2A84               	goto	u661
  1036     0283  2A85               	goto	u660
  1037     0284                     u661:
  1038     0284  2A8B               	goto	l1063
  1039     0285                     u660:
  1040     0285                     l1061:
  1041     0285  0820               	movf	___lwmod@divisor,w
  1042     0286  02A2               	subwf	___lwmod@dividend,f
  1043     0287  0821               	movf	___lwmod@divisor+1,w
  1044     0288  1C03               	skipc
  1045     0289  03A3               	decf	___lwmod@dividend+1,f
  1046     028A  02A3               	subwf	___lwmod@dividend+1,f
  1047     028B                     l1063:
  1048     028B  3001               	movlw	1
  1049     028C                     u675:
  1050     028C  1003               	clrc
  1051     028D  0CA1               	rrf	___lwmod@divisor+1,f
  1052     028E  0CA0               	rrf	___lwmod@divisor,f
  1053     028F  3EFF               	addlw	-1
  1054     0290  1D03               	skipz
  1055     0291  2A8C               	goto	u675
  1056     0292                     l1065:
  1057     0292  3001               	movlw	1
  1058     0293  02A4               	subwf	___lwmod@counter,f
  1059     0294  1D03               	btfss	3,2
  1060     0295  2A97               	goto	u681
  1061     0296  2A98               	goto	u680
  1062     0297                     u681:
  1063     0297  2A7B               	goto	l1059
  1064     0298                     u680:
  1065     0298                     l1067:
  1066     0298  0823               	movf	___lwmod@dividend+1,w
  1067     0299  00A1               	movwf	?___lwmod+1
  1068     029A  0822               	movf	___lwmod@dividend,w
  1069     029B  00A0               	movwf	?___lwmod
  1070     029C                     l455:
  1071     029C  0008               	return
  1072     029D                     __end_of___lwmod:
  1073                           
  1074                           	psect	text3
  1075     021D                     __ptext3:	
  1076 ;; *************** function ___lwdiv *****************
  1077 ;; Defined at:
  1078 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\lwdiv.c"
  1079 ;; Parameters:    Size  Location     Type
  1080 ;;  divisor         2    3[COMMON] unsigned int 
  1081 ;;  dividend        2    5[COMMON] unsigned int 
  1082 ;; Auto vars:     Size  Location     Type
  1083 ;;  quotient        2    7[COMMON] unsigned int 
  1084 ;;  counter         1    9[COMMON] unsigned char 
  1085 ;; Return value:  Size  Location     Type
  1086 ;;                  2    3[COMMON] unsigned int 
  1087 ;; Registers used:
  1088 ;;		wreg, status,2, status,0, btemp+1
  1089 ;; Tracked objects:
  1090 ;;		On entry : 0/0
  1091 ;;		On exit  : 0/0
  1092 ;;		Unchanged: 0/0
  1093 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1094 ;;      Params:         4       0       0       0       0
  1095 ;;      Locals:         3       0       0       0       0
  1096 ;;      Temps:          0       0       0       0       0
  1097 ;;      Totals:         7       0       0       0       0
  1098 ;;Total ram usage:        7 bytes
  1099 ;; Hardware stack levels used: 1
  1100 ;; Hardware stack levels required when called: 1
  1101 ;; This function calls:
  1102 ;;		Nothing
  1103 ;; This function is called by:
  1104 ;;		_main
  1105 ;; This function uses a non-reentrant model
  1106 ;;
  1107                           
  1108     021D                     ___lwdiv:	
  1109                           ;psect for function ___lwdiv
  1110                           
  1111     021D                     l871:	
  1112                           ;incstack = 0
  1113                           ; Regs used in ___lwdiv: [wreg+status,2+status,0+btemp+1]
  1114                           
  1115     021D  01F7               	clrf	___lwdiv@quotient
  1116     021E  01F8               	clrf	___lwdiv@quotient+1
  1117     021F                     l873:
  1118     021F  0873               	movf	___lwdiv@divisor,w
  1119     0220  0474               	iorwf	___lwdiv@divisor+1,w
  1120     0221  1903               	btfsc	3,2
  1121     0222  2A24               	goto	u371
  1122     0223  2A25               	goto	u370
  1123     0224                     u371:
  1124     0224  2A5C               	goto	l893
  1125     0225                     u370:
  1126     0225                     l875:
  1127     0225  01F9               	clrf	___lwdiv@counter
  1128     0226  0AF9               	incf	___lwdiv@counter,f
  1129     0227  2A33               	goto	l881
  1130     0228                     l877:
  1131     0228  3001               	movlw	1
  1132     0229                     u385:
  1133     0229  1003               	clrc
  1134     022A  0DF3               	rlf	___lwdiv@divisor,f
  1135     022B  0DF4               	rlf	___lwdiv@divisor+1,f
  1136     022C  3EFF               	addlw	-1
  1137     022D  1D03               	skipz
  1138     022E  2A29               	goto	u385
  1139     022F                     l879:
  1140     022F  3001               	movlw	1
  1141     0230  00FF               	movwf	btemp+1
  1142     0231  087F               	movf	btemp+1,w
  1143     0232  07F9               	addwf	___lwdiv@counter,f
  1144     0233                     l881:
  1145     0233  1FF4               	btfss	___lwdiv@divisor+1,7
  1146     0234  2A36               	goto	u391
  1147     0235  2A37               	goto	u390
  1148     0236                     u391:
  1149     0236  2A28               	goto	l877
  1150     0237                     u390:
  1151     0237                     l883:
  1152     0237  3001               	movlw	1
  1153     0238                     u405:
  1154     0238  1003               	clrc
  1155     0239  0DF7               	rlf	___lwdiv@quotient,f
  1156     023A  0DF8               	rlf	___lwdiv@quotient+1,f
  1157     023B  3EFF               	addlw	-1
  1158     023C  1D03               	skipz
  1159     023D  2A38               	goto	u405
  1160     023E  0874               	movf	___lwdiv@divisor+1,w
  1161     023F  0276               	subwf	___lwdiv@dividend+1,w
  1162     0240  1D03               	skipz
  1163     0241  2A44               	goto	u415
  1164     0242  0873               	movf	___lwdiv@divisor,w
  1165     0243  0275               	subwf	___lwdiv@dividend,w
  1166     0244                     u415:
  1167     0244  1C03               	skipc
  1168     0245  2A47               	goto	u411
  1169     0246  2A48               	goto	u410
  1170     0247                     u411:
  1171     0247  2A4F               	goto	l889
  1172     0248                     u410:
  1173     0248                     l885:
  1174     0248  0873               	movf	___lwdiv@divisor,w
  1175     0249  02F5               	subwf	___lwdiv@dividend,f
  1176     024A  0874               	movf	___lwdiv@divisor+1,w
  1177     024B  1C03               	skipc
  1178     024C  03F6               	decf	___lwdiv@dividend+1,f
  1179     024D  02F6               	subwf	___lwdiv@dividend+1,f
  1180     024E                     l887:
  1181     024E  1477               	bsf	___lwdiv@quotient,0
  1182     024F                     l889:
  1183     024F  3001               	movlw	1
  1184     0250                     u425:
  1185     0250  1003               	clrc
  1186     0251  0CF4               	rrf	___lwdiv@divisor+1,f
  1187     0252  0CF3               	rrf	___lwdiv@divisor,f
  1188     0253  3EFF               	addlw	-1
  1189     0254  1D03               	skipz
  1190     0255  2A50               	goto	u425
  1191     0256                     l891:
  1192     0256  3001               	movlw	1
  1193     0257  02F9               	subwf	___lwdiv@counter,f
  1194     0258  1D03               	btfss	3,2
  1195     0259  2A5B               	goto	u431
  1196     025A  2A5C               	goto	u430
  1197     025B                     u431:
  1198     025B  2A37               	goto	l883
  1199     025C                     u430:
  1200     025C                     l893:
  1201     025C  0878               	movf	___lwdiv@quotient+1,w
  1202     025D  00F4               	movwf	?___lwdiv+1
  1203     025E  0877               	movf	___lwdiv@quotient,w
  1204     025F  00F3               	movwf	?___lwdiv
  1205     0260                     l445:
  1206     0260  0008               	return
  1207     0261                     __end_of___lwdiv:
  1208                           
  1209                           	psect	text4
  1210     0180                     __ptext4:	
  1211 ;; *************** function ___aldiv *****************
  1212 ;; Defined at:
  1213 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\aldiv.c"
  1214 ;; Parameters:    Size  Location     Type
  1215 ;;  divisor         4    0[BANK0 ] long 
  1216 ;;  dividend        4    4[BANK0 ] long 
  1217 ;; Auto vars:     Size  Location     Type
  1218 ;;  quotient        4    6[COMMON] long 
  1219 ;;  sign            1    5[COMMON] unsigned char 
  1220 ;;  counter         1    4[COMMON] unsigned char 
  1221 ;; Return value:  Size  Location     Type
  1222 ;;                  4    0[BANK0 ] long 
  1223 ;; Registers used:
  1224 ;;		wreg, status,2, status,0, btemp+1
  1225 ;; Tracked objects:
  1226 ;;		On entry : 0/0
  1227 ;;		On exit  : 0/0
  1228 ;;		Unchanged: 0/0
  1229 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1230 ;;      Params:         0       8       0       0       0
  1231 ;;      Locals:         6       0       0       0       0
  1232 ;;      Temps:          1       0       0       0       0
  1233 ;;      Totals:         7       8       0       0       0
  1234 ;;Total ram usage:       15 bytes
  1235 ;; Hardware stack levels used: 1
  1236 ;; Hardware stack levels required when called: 1
  1237 ;; This function calls:
  1238 ;;		Nothing
  1239 ;; This function is called by:
  1240 ;;		_main
  1241 ;; This function uses a non-reentrant model
  1242 ;;
  1243                           
  1244     0180                     ___aldiv:	
  1245                           ;psect for function ___aldiv
  1246                           
  1247     0180                     l1007:	
  1248                           ;incstack = 0
  1249                           ; Regs used in ___aldiv: [wreg+status,2+status,0+btemp+1]
  1250                           
  1251     0180  01F5               	clrf	___aldiv@sign
  1252     0181                     l1009:
  1253     0181  1283               	bcf	3,5	;RP0=0, select bank0
  1254     0182  1303               	bcf	3,6	;RP1=0, select bank0
  1255     0183  1FA3               	btfss	___aldiv@divisor+3,7
  1256     0184  2986               	goto	u531
  1257     0185  2987               	goto	u530
  1258     0186                     u531:
  1259     0186  2994               	goto	l230
  1260     0187                     u530:
  1261     0187                     l1011:
  1262     0187  09A0               	comf	___aldiv@divisor,f
  1263     0188  09A1               	comf	___aldiv@divisor+1,f
  1264     0189  09A2               	comf	___aldiv@divisor+2,f
  1265     018A  09A3               	comf	___aldiv@divisor+3,f
  1266     018B  0AA0               	incf	___aldiv@divisor,f
  1267     018C  1903               	skipnz
  1268     018D  0AA1               	incf	___aldiv@divisor+1,f
  1269     018E  1903               	skipnz
  1270     018F  0AA2               	incf	___aldiv@divisor+2,f
  1271     0190  1903               	skipnz
  1272     0191  0AA3               	incf	___aldiv@divisor+3,f
  1273     0192  01F5               	clrf	___aldiv@sign
  1274     0193  0AF5               	incf	___aldiv@sign,f
  1275     0194                     l230:
  1276     0194  1FA7               	btfss	___aldiv@dividend+3,7
  1277     0195  2997               	goto	u541
  1278     0196  2998               	goto	u540
  1279     0197                     u541:
  1280     0197  29A7               	goto	l1017
  1281     0198                     u540:
  1282     0198                     l1013:
  1283     0198  09A4               	comf	___aldiv@dividend,f
  1284     0199  09A5               	comf	___aldiv@dividend+1,f
  1285     019A  09A6               	comf	___aldiv@dividend+2,f
  1286     019B  09A7               	comf	___aldiv@dividend+3,f
  1287     019C  0AA4               	incf	___aldiv@dividend,f
  1288     019D  1903               	skipnz
  1289     019E  0AA5               	incf	___aldiv@dividend+1,f
  1290     019F  1903               	skipnz
  1291     01A0  0AA6               	incf	___aldiv@dividend+2,f
  1292     01A1  1903               	skipnz
  1293     01A2  0AA7               	incf	___aldiv@dividend+3,f
  1294     01A3                     l1015:
  1295     01A3  3001               	movlw	1
  1296     01A4  00FF               	movwf	btemp+1
  1297     01A5  087F               	movf	btemp+1,w
  1298     01A6  06F5               	xorwf	___aldiv@sign,f
  1299     01A7                     l1017:
  1300     01A7  3000               	movlw	0
  1301     01A8  00F9               	movwf	___aldiv@quotient+3
  1302     01A9  3000               	movlw	0
  1303     01AA  00F8               	movwf	___aldiv@quotient+2
  1304     01AB  3000               	movlw	0
  1305     01AC  00F7               	movwf	___aldiv@quotient+1
  1306     01AD  3000               	movlw	0
  1307     01AE  00F6               	movwf	___aldiv@quotient
  1308     01AF                     l1019:
  1309     01AF  0823               	movf	___aldiv@divisor+3,w
  1310     01B0  0422               	iorwf	___aldiv@divisor+2,w
  1311     01B1  0421               	iorwf	___aldiv@divisor+1,w
  1312     01B2  0420               	iorwf	___aldiv@divisor,w
  1313     01B3  1903               	skipnz
  1314     01B4  29B6               	goto	u551
  1315     01B5  29B7               	goto	u550
  1316     01B6                     u551:
  1317     01B6  2A04               	goto	l1041
  1318     01B7                     u550:
  1319     01B7                     l1021:
  1320     01B7  01F4               	clrf	___aldiv@counter
  1321     01B8  0AF4               	incf	___aldiv@counter,f
  1322     01B9  29C7               	goto	l1027
  1323     01BA                     l1023:
  1324     01BA  3001               	movlw	1
  1325     01BB  00F3               	movwf	??___aldiv
  1326     01BC                     u565:
  1327     01BC  1003               	clrc
  1328     01BD  0DA0               	rlf	___aldiv@divisor,f
  1329     01BE  0DA1               	rlf	___aldiv@divisor+1,f
  1330     01BF  0DA2               	rlf	___aldiv@divisor+2,f
  1331     01C0  0DA3               	rlf	___aldiv@divisor+3,f
  1332     01C1  0BF3               	decfsz	??___aldiv,f
  1333     01C2  29BC               	goto	u565
  1334     01C3                     l1025:
  1335     01C3  3001               	movlw	1
  1336     01C4  00FF               	movwf	btemp+1
  1337     01C5  087F               	movf	btemp+1,w
  1338     01C6  07F4               	addwf	___aldiv@counter,f
  1339     01C7                     l1027:
  1340     01C7  1FA3               	btfss	___aldiv@divisor+3,7
  1341     01C8  29CA               	goto	u571
  1342     01C9  29CB               	goto	u570
  1343     01CA                     u571:
  1344     01CA  29BA               	goto	l1023
  1345     01CB                     u570:
  1346     01CB                     l1029:
  1347     01CB  3001               	movlw	1
  1348     01CC  00F3               	movwf	??___aldiv
  1349     01CD                     u585:
  1350     01CD  1003               	clrc
  1351     01CE  0DF6               	rlf	___aldiv@quotient,f
  1352     01CF  0DF7               	rlf	___aldiv@quotient+1,f
  1353     01D0  0DF8               	rlf	___aldiv@quotient+2,f
  1354     01D1  0DF9               	rlf	___aldiv@quotient+3,f
  1355     01D2  0BF3               	decfsz	??___aldiv,f
  1356     01D3  29CD               	goto	u585
  1357     01D4                     l1031:
  1358     01D4  0823               	movf	___aldiv@divisor+3,w
  1359     01D5  0227               	subwf	___aldiv@dividend+3,w
  1360     01D6  1D03               	skipz
  1361     01D7  29E2               	goto	u595
  1362     01D8  0822               	movf	___aldiv@divisor+2,w
  1363     01D9  0226               	subwf	___aldiv@dividend+2,w
  1364     01DA  1D03               	skipz
  1365     01DB  29E2               	goto	u595
  1366     01DC  0821               	movf	___aldiv@divisor+1,w
  1367     01DD  0225               	subwf	___aldiv@dividend+1,w
  1368     01DE  1D03               	skipz
  1369     01DF  29E2               	goto	u595
  1370     01E0  0820               	movf	___aldiv@divisor,w
  1371     01E1  0224               	subwf	___aldiv@dividend,w
  1372     01E2                     u595:
  1373     01E2  1C03               	skipc
  1374     01E3  29E5               	goto	u591
  1375     01E4  29E6               	goto	u590
  1376     01E5                     u591:
  1377     01E5  29F5               	goto	l1037
  1378     01E6                     u590:
  1379     01E6                     l1033:
  1380     01E6  0820               	movf	___aldiv@divisor,w
  1381     01E7  02A4               	subwf	___aldiv@dividend,f
  1382     01E8  0821               	movf	___aldiv@divisor+1,w
  1383     01E9  1C03               	skipc
  1384     01EA  0F21               	incfsz	___aldiv@divisor+1,w
  1385     01EB  02A5               	subwf	___aldiv@dividend+1,f
  1386     01EC  0822               	movf	___aldiv@divisor+2,w
  1387     01ED  1C03               	skipc
  1388     01EE  0F22               	incfsz	___aldiv@divisor+2,w
  1389     01EF  02A6               	subwf	___aldiv@dividend+2,f
  1390     01F0  0823               	movf	___aldiv@divisor+3,w
  1391     01F1  1C03               	skipc
  1392     01F2  0F23               	incfsz	___aldiv@divisor+3,w
  1393     01F3  02A7               	subwf	___aldiv@dividend+3,f
  1394     01F4                     l1035:
  1395     01F4  1476               	bsf	___aldiv@quotient,0
  1396     01F5                     l1037:
  1397     01F5  3001               	movlw	1
  1398     01F6                     u605:
  1399     01F6  1003               	clrc
  1400     01F7  0CA3               	rrf	___aldiv@divisor+3,f
  1401     01F8  0CA2               	rrf	___aldiv@divisor+2,f
  1402     01F9  0CA1               	rrf	___aldiv@divisor+1,f
  1403     01FA  0CA0               	rrf	___aldiv@divisor,f
  1404     01FB  3EFF               	addlw	-1
  1405     01FC  1D03               	skipz
  1406     01FD  29F6               	goto	u605
  1407     01FE                     l1039:
  1408     01FE  3001               	movlw	1
  1409     01FF  02F4               	subwf	___aldiv@counter,f
  1410     0200  1D03               	btfss	3,2
  1411     0201  2A03               	goto	u611
  1412     0202  2A04               	goto	u610
  1413     0203                     u611:
  1414     0203  29CB               	goto	l1029
  1415     0204                     u610:
  1416     0204                     l1041:
  1417     0204  0875               	movf	___aldiv@sign,w
  1418     0205  1903               	btfsc	3,2
  1419     0206  2A08               	goto	u621
  1420     0207  2A09               	goto	u620
  1421     0208                     u621:
  1422     0208  2A14               	goto	l1045
  1423     0209                     u620:
  1424     0209                     l1043:
  1425     0209  09F6               	comf	___aldiv@quotient,f
  1426     020A  09F7               	comf	___aldiv@quotient+1,f
  1427     020B  09F8               	comf	___aldiv@quotient+2,f
  1428     020C  09F9               	comf	___aldiv@quotient+3,f
  1429     020D  0AF6               	incf	___aldiv@quotient,f
  1430     020E  1903               	skipnz
  1431     020F  0AF7               	incf	___aldiv@quotient+1,f
  1432     0210  1903               	skipnz
  1433     0211  0AF8               	incf	___aldiv@quotient+2,f
  1434     0212  1903               	skipnz
  1435     0213  0AF9               	incf	___aldiv@quotient+3,f
  1436     0214                     l1045:
  1437     0214  0879               	movf	___aldiv@quotient+3,w
  1438     0215  00A3               	movwf	?___aldiv+3
  1439     0216  0878               	movf	___aldiv@quotient+2,w
  1440     0217  00A2               	movwf	?___aldiv+2
  1441     0218  0877               	movf	___aldiv@quotient+1,w
  1442     0219  00A1               	movwf	?___aldiv+1
  1443     021A  0876               	movf	___aldiv@quotient,w
  1444     021B  00A0               	movwf	?___aldiv
  1445     021C                     l240:
  1446     021C  0008               	return
  1447     021D                     __end_of___aldiv:
  1448                           
  1449                           	psect	text5
  1450     029D                     __ptext5:	
  1451 ;; *************** function _ISR *****************
  1452 ;; Defined at:
  1453 ;;		line 31 in file "main.c"
  1454 ;; Parameters:    Size  Location     Type
  1455 ;;		None
  1456 ;; Auto vars:     Size  Location     Type
  1457 ;;		None
  1458 ;; Return value:  Size  Location     Type
  1459 ;;                  1    wreg      void 
  1460 ;; Registers used:
  1461 ;;		wreg, status,2, status,0, btemp+1
  1462 ;; Tracked objects:
  1463 ;;		On entry : 0/0
  1464 ;;		On exit  : 0/0
  1465 ;;		Unchanged: 0/0
  1466 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1467 ;;      Params:         0       0       0       0       0
  1468 ;;      Locals:         0       0       0       0       0
  1469 ;;      Temps:          3       0       0       0       0
  1470 ;;      Totals:         3       0       0       0       0
  1471 ;;Total ram usage:        3 bytes
  1472 ;; Hardware stack levels used: 1
  1473 ;; This function calls:
  1474 ;;		Nothing
  1475 ;; This function is called by:
  1476 ;;		Interrupt level 1
  1477 ;; This function uses a non-reentrant model
  1478 ;;
  1479                           
  1480     029D                     _ISR:	
  1481                           ;psect for function _ISR
  1482                           
  1483     029D                     i1l919:
  1484                           
  1485                           ;main.c: 32:     if(TMR1IF){
  1486     029D  1283               	bcf	3,5	;RP0=0, select bank0
  1487     029E  1303               	bcf	3,6	;RP1=0, select bank0
  1488     029F  1C0C               	btfss	12,0	;volatile
  1489     02A0  2AA2               	goto	u50_21
  1490     02A1  2AA3               	goto	u50_20
  1491     02A2                     u50_21:
  1492     02A2  2AB9               	goto	i1l69
  1493     02A3                     u50_20:
  1494     02A3                     i1l921:
  1495                           
  1496                           ;main.c: 33:         TMR1 = preload;
  1497     02A3  0841               	movf	_preload+1,w
  1498     02A4  008F               	movwf	15	;volatile
  1499     02A5  0840               	movf	_preload,w
  1500     02A6  008E               	movwf	14	;volatile
  1501     02A7                     i1l923:
  1502                           
  1503                           ;main.c: 34:         counter++;
  1504     02A7  3001               	movlw	1
  1505     02A8  00FF               	movwf	btemp+1
  1506     02A9  087F               	movf	btemp+1,w
  1507     02AA  07FA               	addwf	_counter,f
  1508     02AB                     i1l925:
  1509                           
  1510                           ;main.c: 35:         if(counter == 20){
  1511     02AB  3014               	movlw	20
  1512     02AC  067A               	xorwf	_counter,w
  1513     02AD  1D03               	btfss	3,2
  1514     02AE  2AB0               	goto	u51_21
  1515     02AF  2AB1               	goto	u51_20
  1516     02B0                     u51_21:
  1517     02B0  2AB8               	goto	i1l931
  1518     02B1                     u51_20:
  1519     02B1                     i1l927:
  1520                           
  1521                           ;main.c: 37:             second++;
  1522     02B1  3001               	movlw	1
  1523     02B2  07C8               	addwf	_second,f
  1524     02B3  1803               	skipnc
  1525     02B4  0AC9               	incf	_second+1,f
  1526     02B5  3000               	movlw	0
  1527     02B6  07C9               	addwf	_second+1,f
  1528     02B7                     i1l68:	
  1529                           ;main.c: 38:             if(second == 235959) second = 0;
  1530                           
  1531                           
  1532                           ;main.c: 39:             counter = 0;
  1533     02B7  01FA               	clrf	_counter
  1534     02B8                     i1l931:
  1535                           
  1536                           ;main.c: 41:         TMR1IF = 0;
  1537     02B8  100C               	bcf	12,0	;volatile
  1538     02B9                     i1l69:
  1539     02B9  0872               	movf	??_ISR+2,w
  1540     02BA  00FF               	movwf	btemp+1
  1541     02BB  0871               	movf	??_ISR+1,w
  1542     02BC  008A               	movwf	10
  1543     02BD  0E70               	swapf	??_ISR,w
  1544     02BE  0083               	movwf	3
  1545     02BF  0EFE               	swapf	btemp,f
  1546     02C0  0E7E               	swapf	btemp,w
  1547     02C1  0009               	retfie
  1548     02C2                     __end_of_ISR:
  1549     007E                     btemp	set	126	;btemp
  1550     007E                     wtemp0	set	126
  1551                           
  1552                           	psect	intentry
  1553     0004                     __pintentry:	
  1554                           ;incstack = 0
  1555                           ; Regs used in _ISR: [wreg+status,2+status,0+btemp+1]
  1556                           
  1557     0004                     interrupt_function:
  1558     007E                     saved_w	set	btemp
  1559     0004  00FE               	movwf	btemp
  1560     0005  0E03               	swapf	3,w
  1561     0006  00F0               	movwf	??_ISR
  1562     0007  080A               	movf	10,w
  1563     0008  00F1               	movwf	??_ISR+1
  1564     0009  087F               	movf	btemp+1,w
  1565     000A  00F2               	movwf	??_ISR+2
  1566     000B  120A  118A  2A9D   	ljmp	_ISR
  1567                           
  1568                           	psect	config
  1569                           
  1570                           ;Config register CONFIG @ 0x2007
  1571                           ;	Oscillator Selection bits
  1572                           ;	FOSC = XT, XT oscillator
  1573                           ;	Watchdog Timer Enable bit
  1574                           ;	WDTE = OFF, WDT disabled
  1575                           ;	Power-up Timer Enable bit
  1576                           ;	PWRTE = ON, PWRT enabled
  1577                           ;	Brown-out Reset Enable bit
  1578                           ;	BOREN = ON, BOR enabled
  1579                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  1580                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
  1581                           ;	Data EEPROM Memory Code Protection bit
  1582                           ;	CPD = OFF, Data EEPROM code protection off
  1583                           ;	Flash Program Memory Write Enable bits
  1584                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
  1585                           ;	In-Circuit Debugger Mode bit
  1586                           ;	DEBUG = 0x1, unprogrammed default
  1587                           ;	Flash Program Memory Code Protection bit
  1588                           ;	CP = OFF, Code protection off
  1589     2007                     	org	8199
  1590     2007  3F71               	dw	16241

Data Sizes:
    Strings     0
    Constant    0
    Data        10
    BSS         3
    Persistent  8
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      11
    BANK0            80     22      42
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->___aldiv
    _main->___lwdiv
    ___lwmod->___lwdiv

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    _main->___aldiv

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                14    14      0    2756
                                              8 BANK0     14    14      0
                            ___aldiv
                            ___lwdiv
                            ___lwmod
                   _timer1_timermode
 ---------------------------------------------------------------------------------
 (1) _timer1_timermode                                     3     3      0      22
                                              3 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) ___lwmod                                              5     1      4    1132
                                              0 BANK0      5     1      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (1) ___lwdiv                                              7     3      4     770
                                              3 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (1) ___aldiv                                             15     7      8     625
                                              3 COMMON     7     7      0
                                              0 BANK0      8     0      8
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _ISR                                                  3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___aldiv
   ___lwdiv
   ___lwmod
     ___lwdiv (ARG)
   _timer1_timermode

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     16      2A       5       52.5%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      A       B       1       78.6%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      35      12        0.0%
ABS                  0      0      35       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Mon Nov 06 18:32:35 2023

                        pc 0002                         l61 02D8                         _h1 0047  
                       _h2 0046                         _m1 0045                         _m2 0044  
                       _s1 0043                         _s2 0042                         fsr 0004  
                      l230 0194                        l240 021C                        l445 0260  
                      l455 029C                        l821 02D2                        l823 02D5  
                      l815 02C3                        l825 02D6                        l817 02C8  
                      l827 02D7                        l819 02CF                        l871 021D  
                      l881 0233                        l873 021F                        l891 0256  
                      l883 0237                        l875 0225                        l885 0248  
                      l877 0228                        l893 025C                        l887 024E  
                      l879 022F                        l889 024F                        _GIE 005F  
                      _RC0 0038                        _RC1 0039                        _RC2 003A  
                      _RC3 003B                        _RC4 003C                        _RC5 003D  
                      u410 0248                        u411 0247                        u405 0238  
                      u430 025C                        u431 025B                        u415 0244  
                      u425 0250                        u610 0204                        u530 0187  
                      u370 0225                        u611 0203                        u531 0186  
                      u371 0224                        u620 0209                        u540 0198  
                      _ISR 029D                        u621 0208                        u605 01F6  
                      u541 0197                        u550 01B7                        u390 0237  
                      u630 0269                        u551 01B6                        u391 0236  
                      u631 0268                        u385 0229                        u570 01CB  
                      u650 027B                        u571 01CA                        u651 027A  
                      u707 010B                        u660 0285                        u565 01BC  
                      u661 0284                        u645 026D                        u717 0120  
                      u590 01E6                        u591 01E5                        u727 0135  
                      u680 0298                        u585 01CD                        u681 0297  
                      u665 0281                        u737 014A                        u690 0030  
                      u595 01E2                        u675 028C                        u747 015F  
                      u757 0174                        fsr0 0004                        indf 0000  
                     ?_ISR 0070                       l1011 0187                       l1021 01B7  
                     l1013 0198                       l1101 0105                       l1031 01D4  
                     l1023 01BA                       l1015 01A3                       l1007 0180  
                     l1111 0125                       l1103 0110                       l1033 01E6  
                     l1025 01C3                       l1041 0204                       l1017 01A7  
                     l1009 0181                       l1121 013D                       l1113 0128  
                     l1105 0113                       l1043 0209                       l1035 01F4  
                     l1027 01C7                       l1019 01AF                       l1051 0269  
                     l1131 0158                       l1123 0143                       l1115 012E  
                     l1107 0119                       l1045 0214                       l1037 01F5  
                     l1029 01CB                       l1061 0285                       l1053 026C  
                     l1141 016E                       l1133 0159                       l1125 0144  
                     l1117 012F                       l1109 011A                       l1039 01FE  
                     l1063 028B                       l1055 0273                       l1143 0179  
                     l1135 0164                       l1127 014F                       l1119 013A  
                     l1071 0026                       l1065 0292                       l1057 0277  
                     l1049 0261                       l1137 0167                       l1129 0152  
                     l1081 004A                       l1073 003D                       l1059 027B  
                     l1067 0298                       l1139 016D                       l1091 00AD  
                     l1083 004E                       l1075 0040                       l1093 00CD  
                     l1085 0054                       l1077 0043                       l1095 00ED  
                     l1087 006D                       l1079 0046                       l1097 00FE  
                     l1089 008D                       l1099 0104                main@hex_seg 002C  
                     _PEIE 005E                       i1l68 02B7                       i1l69 02B9  
                     _TMR1 000E                       _main 0026                       btemp 007E  
                     start 000E                      ??_ISR 0070            __end_of___aldiv 021D  
                    ?_main 0070            __end_of___lwdiv 0261            __end_of___lwmod 029D  
                    i1l921 02A3                      i1l931 02B8                      i1l923 02A7  
                    i1l925 02AB                      i1l927 02B1                      i1l919 029D  
                    u50_20 02A3                      u50_21 02A2                      u51_20 02B1  
                    u51_21 02B0                      _PORTB 0006                      _PORTC 0007  
                    _TRISB 0086                      _TRISC 0087                      pclath 000A  
                    status 0003                      wtemp0 007E            __initialization 0011  
             __end_of_main 0180                     ??_main 0028  timer1_timermode@preloaded 0075  
                   _TMR1IE 0460                     _TMR1IF 0060                     _TMR1CS 0081  
                   _TMR1ON 0080                  ??___aldiv 0073                  ??___lwdiv 0077  
                ??___lwmod 007A                     _second 0048           _timer1_timermode 02C2  
                   saved_w 007E    __end_of__initialization 0022             __pcstackCOMMON 0070  
             __pidataBANK0 02EC                 __pbssBANK0 0048                 __pmaintext 0026  
               __pintentry 0004                    _T1CKPS0 0084                    _T1CKPS1 0085  
                  ___aldiv 0180                    ___lwdiv 021D                    ___lwmod 0261  
                  __ptext1 02C2                    __ptext2 0261                    __ptext3 021D  
                  __ptext4 0180                    __ptext5 029D                    _counter 007A  
         ___aldiv@dividend 0024                    _preload 0040       end_of_initialization 0022  
 __end_of_timer1_timermode 02D9           ___aldiv@quotient 0076        start_initialization 0011  
              __end_of_ISR 02C2                 init_fetch0 02D9                __pdataBANK0 0036  
              __pbssCOMMON 007A                  ___latbits 0002              __pcstackBANK0 0020  
                __pnvBANK0 0040           ___lwdiv@dividend 0075                   ?___aldiv 0020  
                 ?___lwdiv 0073                   ?___lwmod 0020           ___lwdiv@quotient 0077  
          ___aldiv@divisor 0020          interrupt_function 0004            ___aldiv@counter 0074  
        ?_timer1_timermode 0070                  main@F1019 0036         ??_timer1_timermode 0073  
          ___lwdiv@divisor 0073            ___lwdiv@counter 0079                   init_ram0 02DD  
                 intlevel1 0000           ___lwmod@dividend 0022            ___lwmod@divisor 0020  
          ___lwmod@counter 0024               ___aldiv@sign 0075  
