

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Mon Nov 06 20:03:12 2023

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	inittext,global,class=CODE,delta=2
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	maintext,global,class=CODE,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2
    14                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    15                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    16                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    17                           	psect	text5,local,class=CODE,merge=1,delta=2
    18                           	psect	intentry,global,class=CODE,delta=2
    19                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    20                           	dabs	1,0x7E,2
    21     0000                     
    22                           ; Generated 22/03/2023 GMT
    23                           ; 
    24                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    25                           ; All rights reserved.
    26                           ; 
    27                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    28                           ; 
    29                           ; Redistribution and use in source and binary forms, with or without modification, are
    30                           ; permitted provided that the following conditions are met:
    31                           ; 
    32                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    33                           ;        conditions and the following disclaimer.
    34                           ; 
    35                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    36                           ;        of conditions and the following disclaimer in the documentation and/or other
    37                           ;        materials provided with the distribution. Publication is not required when
    38                           ;        this file is used in an embedded application.
    39                           ; 
    40                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    41                           ;        software without specific prior written permission.
    42                           ; 
    43                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    44                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    45                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    46                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    47                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    48                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    49                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    50                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    51                           ; 
    52                           ; 
    53                           ; Code-generator required, PIC16F877A Definitions
    54                           ; 
    55                           ; SFR Addresses
    56     0000                     	;# 
    57     0001                     	;# 
    58     0002                     	;# 
    59     0003                     	;# 
    60     0004                     	;# 
    61     0005                     	;# 
    62     0006                     	;# 
    63     0007                     	;# 
    64     0008                     	;# 
    65     0009                     	;# 
    66     000A                     	;# 
    67     000B                     	;# 
    68     000C                     	;# 
    69     000D                     	;# 
    70     000E                     	;# 
    71     000E                     	;# 
    72     000F                     	;# 
    73     0010                     	;# 
    74     0011                     	;# 
    75     0012                     	;# 
    76     0013                     	;# 
    77     0014                     	;# 
    78     0015                     	;# 
    79     0015                     	;# 
    80     0016                     	;# 
    81     0017                     	;# 
    82     0018                     	;# 
    83     0019                     	;# 
    84     001A                     	;# 
    85     001B                     	;# 
    86     001B                     	;# 
    87     001C                     	;# 
    88     001D                     	;# 
    89     001E                     	;# 
    90     001F                     	;# 
    91     0081                     	;# 
    92     0085                     	;# 
    93     0086                     	;# 
    94     0087                     	;# 
    95     0088                     	;# 
    96     0089                     	;# 
    97     008C                     	;# 
    98     008D                     	;# 
    99     008E                     	;# 
   100     0091                     	;# 
   101     0092                     	;# 
   102     0093                     	;# 
   103     0094                     	;# 
   104     0098                     	;# 
   105     0099                     	;# 
   106     009C                     	;# 
   107     009D                     	;# 
   108     009E                     	;# 
   109     009F                     	;# 
   110     010C                     	;# 
   111     010D                     	;# 
   112     010E                     	;# 
   113     010F                     	;# 
   114     018C                     	;# 
   115     018D                     	;# 
   116     0000                     	;# 
   117     0001                     	;# 
   118     0002                     	;# 
   119     0003                     	;# 
   120     0004                     	;# 
   121     0005                     	;# 
   122     0006                     	;# 
   123     0007                     	;# 
   124     0008                     	;# 
   125     0009                     	;# 
   126     000A                     	;# 
   127     000B                     	;# 
   128     000C                     	;# 
   129     000D                     	;# 
   130     000E                     	;# 
   131     000E                     	;# 
   132     000F                     	;# 
   133     0010                     	;# 
   134     0011                     	;# 
   135     0012                     	;# 
   136     0013                     	;# 
   137     0014                     	;# 
   138     0015                     	;# 
   139     0015                     	;# 
   140     0016                     	;# 
   141     0017                     	;# 
   142     0018                     	;# 
   143     0019                     	;# 
   144     001A                     	;# 
   145     001B                     	;# 
   146     001B                     	;# 
   147     001C                     	;# 
   148     001D                     	;# 
   149     001E                     	;# 
   150     001F                     	;# 
   151     0081                     	;# 
   152     0085                     	;# 
   153     0086                     	;# 
   154     0087                     	;# 
   155     0088                     	;# 
   156     0089                     	;# 
   157     008C                     	;# 
   158     008D                     	;# 
   159     008E                     	;# 
   160     0091                     	;# 
   161     0092                     	;# 
   162     0093                     	;# 
   163     0094                     	;# 
   164     0098                     	;# 
   165     0099                     	;# 
   166     009C                     	;# 
   167     009D                     	;# 
   168     009E                     	;# 
   169     009F                     	;# 
   170     010C                     	;# 
   171     010D                     	;# 
   172     010E                     	;# 
   173     010F                     	;# 
   174     018C                     	;# 
   175     018D                     	;# 
   176                           
   177                           	psect	idataBANK0
   178     0319                     __pidataBANK0:
   179                           
   180                           ;initializer for main@F1019
   181     0319  34FC               	retlw	252
   182     031A  3460               	retlw	96
   183     031B  34DA               	retlw	218
   184     031C  34F2               	retlw	242
   185     031D  3466               	retlw	102
   186     031E  34B6               	retlw	182
   187     031F  34BE               	retlw	190
   188     0320  34E0               	retlw	224
   189     0321  34FE               	retlw	254
   190     0322  34F6               	retlw	246
   191                           
   192                           	psect	nvBANK0
   193     0048                     __pnvBANK0:
   194     0048                     _preload:
   195     0048                     	ds	2
   196     000E                     _TMR1	set	14
   197     0007                     _PORTC	set	7
   198     0006                     _PORTB	set	6
   199     003D                     _RC5	set	61
   200     003C                     _RC4	set	60
   201     003B                     _RC3	set	59
   202     003A                     _RC2	set	58
   203     0039                     _RC1	set	57
   204     0038                     _RC0	set	56
   205     0046                     _RD6	set	70
   206     0047                     _RD7	set	71
   207     0045                     _RD5	set	69
   208     0080                     _TMR1ON	set	128
   209     005E                     _PEIE	set	94
   210     005F                     _GIE	set	95
   211     0060                     _TMR1IF	set	96
   212     0085                     _T1CKPS1	set	133
   213     0084                     _T1CKPS0	set	132
   214     0081                     _TMR1CS	set	129
   215     0087                     _TRISC	set	135
   216     0086                     _TRISB	set	134
   217     0445                     _TRISD5	set	1093
   218     0446                     _TRISD6	set	1094
   219     0447                     _TRISD7	set	1095
   220     0460                     _TMR1IE	set	1120
   221                           
   222                           	psect	cinit
   223     0011                     start_initialization:	
   224                           ; #config settings
   225                           
   226     0011                     __initialization:
   227                           
   228                           ; Initialize objects allocated to BANK0
   229     0011  1383               	bcf	3,7	;select IRP bank0
   230     0012  303F               	movlw	low (__pdataBANK0+10)
   231     0013  00FD               	movwf	btemp+-1
   232     0014  3003               	movlw	high __pidataBANK0
   233     0015  00FE               	movwf	btemp
   234     0016  3019               	movlw	low __pidataBANK0
   235     0017  00FF               	movwf	btemp+1
   236     0018  3035               	movlw	low __pdataBANK0
   237     0019  0084               	movwf	4
   238     001A  120A  118A  230A  120A  118A  	fcall	init_ram0
   239                           
   240                           ; Clear objects allocated to BANK0
   241     001F  01BF               	clrf	__pbssBANK0& (0+127)
   242     0020  01C0               	clrf	(__pbssBANK0+1)& (0+127)
   243     0021  01C1               	clrf	(__pbssBANK0+2)& (0+127)
   244     0022  01C2               	clrf	(__pbssBANK0+3)& (0+127)
   245     0023  01C3               	clrf	(__pbssBANK0+4)& (0+127)
   246     0024  01C4               	clrf	(__pbssBANK0+5)& (0+127)
   247     0025  01C5               	clrf	(__pbssBANK0+6)& (0+127)
   248     0026  01C6               	clrf	(__pbssBANK0+7)& (0+127)
   249     0027  01C7               	clrf	(__pbssBANK0+8)& (0+127)
   250     0028                     end_of_initialization:	
   251                           ;End of C runtime variable initialization code
   252                           
   253     0028                     __end_of__initialization:
   254     0028  0183               	clrf	3
   255     0029  120A  118A  282C   	ljmp	_main	;jump to C main() function
   256                           
   257                           	psect	bssBANK0
   258     003F                     __pbssBANK0:
   259     003F                     _second:
   260     003F                     	ds	2
   261     0041                     _s2:
   262     0041                     	ds	1
   263     0042                     _s1:
   264     0042                     	ds	1
   265     0043                     _m2:
   266     0043                     	ds	1
   267     0044                     _m1:
   268     0044                     	ds	1
   269     0045                     _h2:
   270     0045                     	ds	1
   271     0046                     _h1:
   272     0046                     	ds	1
   273     0047                     _counter:
   274     0047                     	ds	1
   275                           
   276                           	psect	dataBANK0
   277     0035                     __pdataBANK0:
   278     0035                     main@F1019:
   279     0035                     	ds	10
   280                           
   281                           	psect	inittext
   282     0306                     init_fetch0:	
   283                           ;	Called with low address in FSR and high address in W
   284                           
   285     0306  087E               	movf	btemp,w
   286     0307  008A               	movwf	10
   287     0308  087F               	movf	btemp+1,w
   288     0309  0082               	movwf	2
   289     030A                     init_ram0:	
   290                           ;Called with:
   291                           ;	high address of idata address in btemp 
   292                           ;	low address of idata address in btemp+1 
   293                           ;	low address of data in FSR
   294                           ;	high address + 1 of data in btemp-1
   295                           
   296     030A  120A  118A  2306  120A  118A  	fcall	init_fetch0
   297     030F  0080               	movwf	0
   298     0310  0A84               	incf	4,f
   299     0311  0804               	movf	4,w
   300     0312  067D               	xorwf	btemp+-1,w
   301     0313  1903               	btfsc	3,2
   302     0314  3400               	retlw	0
   303     0315  0AFF               	incf	btemp+1,f
   304     0316  1903               	btfsc	3,2
   305     0317  0AFE               	incf	btemp,f
   306     0318  2B0A               	goto	init_ram0
   307                           
   308                           	psect	cstackCOMMON
   309     0070                     __pcstackCOMMON:
   310     0070                     ?_timer1_timermode:
   311     0070                     ?_ISR:	
   312                           ; 1 bytes @ 0x0
   313                           
   314     0070                     ??_ISR:	
   315                           ; 1 bytes @ 0x0
   316                           
   317     0070                     ?_main:	
   318                           ; 1 bytes @ 0x0
   319                           
   320                           
   321                           ; 1 bytes @ 0x0
   322     0070                     	ds	3
   323     0073                     ??_timer1_timermode:
   324     0073                     ?___lwdiv:	
   325                           ; 1 bytes @ 0x3
   326                           
   327     0073                     ?___aldiv:	
   328                           ; 2 bytes @ 0x3
   329                           
   330     0073                     ___lwdiv@divisor:	
   331                           ; 4 bytes @ 0x3
   332                           
   333     0073                     ___aldiv@divisor:	
   334                           ; 2 bytes @ 0x3
   335                           
   336                           
   337                           ; 4 bytes @ 0x3
   338     0073                     	ds	2
   339     0075                     timer1_timermode@preloaded:
   340     0075                     ___lwdiv@dividend:	
   341                           ; 1 bytes @ 0x5
   342                           
   343                           
   344                           ; 2 bytes @ 0x5
   345     0075                     	ds	2
   346     0077                     ??___lwdiv:
   347     0077                     ___lwdiv@quotient:	
   348                           ; 1 bytes @ 0x7
   349                           
   350     0077                     ___aldiv@dividend:	
   351                           ; 2 bytes @ 0x7
   352                           
   353                           
   354                           ; 4 bytes @ 0x7
   355     0077                     	ds	2
   356     0079                     ___lwdiv@counter:
   357                           
   358                           ; 1 bytes @ 0x9
   359     0079                     	ds	1
   360     007A                     ??___lwmod:
   361     007A                     ___lwmod@counter:	
   362                           ; 1 bytes @ 0xA
   363                           
   364                           
   365                           ; 1 bytes @ 0xA
   366     007A                     	ds	1
   367                           
   368                           	psect	cstackBANK0
   369     0020                     __pcstackBANK0:
   370     0020                     ??___aldiv:
   371     0020                     ?___lwmod:	
   372                           ; 1 bytes @ 0x0
   373                           
   374     0020                     ___lwmod@divisor:	
   375                           ; 2 bytes @ 0x0
   376                           
   377                           
   378                           ; 2 bytes @ 0x0
   379     0020                     	ds	1
   380     0021                     ___aldiv@counter:
   381                           
   382                           ; 1 bytes @ 0x1
   383     0021                     	ds	1
   384     0022                     ___aldiv@sign:
   385     0022                     ___lwmod@dividend:	
   386                           ; 1 bytes @ 0x2
   387                           
   388                           
   389                           ; 2 bytes @ 0x2
   390     0022                     	ds	1
   391     0023                     ___aldiv@quotient:
   392                           
   393                           ; 4 bytes @ 0x3
   394     0023                     	ds	4
   395     0027                     ??_main:
   396                           
   397                           ; 1 bytes @ 0x7
   398     0027                     	ds	4
   399     002B                     main@hex_seg:
   400                           
   401                           ; 10 bytes @ 0xB
   402     002B                     	ds	10
   403                           
   404                           	psect	maintext
   405     002C                     __pmaintext:	
   406 ;;
   407 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
   408 ;;
   409 ;; *************** function _main *****************
   410 ;; Defined at:
   411 ;;		line 56 in file "main.c"
   412 ;; Parameters:    Size  Location     Type
   413 ;;		None
   414 ;; Auto vars:     Size  Location     Type
   415 ;;  hex_seg        10   11[BANK0 ] unsigned char [10]
   416 ;; Return value:  Size  Location     Type
   417 ;;                  1    wreg      void 
   418 ;; Registers used:
   419 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   420 ;; Tracked objects:
   421 ;;		On entry : B00/0
   422 ;;		On exit  : 0/0
   423 ;;		Unchanged: 0/0
   424 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   425 ;;      Params:         0       0       0       0       0
   426 ;;      Locals:         0      10       0       0       0
   427 ;;      Temps:          0       4       0       0       0
   428 ;;      Totals:         0      14       0       0       0
   429 ;;Total ram usage:       14 bytes
   430 ;; Hardware stack levels required when called: 2
   431 ;; This function calls:
   432 ;;		___aldiv
   433 ;;		___lwdiv
   434 ;;		___lwmod
   435 ;;		_timer1_timermode
   436 ;; This function is called by:
   437 ;;		Startup code after reset
   438 ;; This function uses a non-reentrant model
   439 ;;
   440                           
   441     002C                     _main:	
   442                           ;psect for function _main
   443                           
   444     002C                     l964:	
   445                           ;incstack = 0
   446                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   447                           
   448                           
   449                           ;main.c: 58:     uint8_t hex_seg[] = {0xFC,0x60,0xDA,0xF2,0x66,0xB6,0xBE,0xE0,0xFE,0xF6}
      +                          ;
   450     002C  302B               	movlw	main@hex_seg& (0+255)
   451     002D  0084               	movwf	4
   452     002E  3035               	movlw	low main@F1019
   453     002F  1283               	bcf	3,5	;RP0=0, select bank0
   454     0030  1303               	bcf	3,6	;RP1=0, select bank0
   455     0031  00A7               	movwf	??_main
   456     0032  0804               	movf	4,w
   457     0033  00A8               	movwf	??_main+1
   458     0034  300A               	movlw	10
   459     0035  00A9               	movwf	??_main+2
   460     0036                     u550:
   461     0036  0827               	movf	??_main,w
   462     0037  0084               	movwf	4
   463     0038  1383               	bcf	3,7	;select IRP bank0
   464     0039  0800               	movf	0,w
   465     003A  00AA               	movwf	??_main+3
   466     003B  0AA7               	incf	??_main,f
   467     003C  0828               	movf	??_main+1,w
   468     003D  0084               	movwf	4
   469     003E  082A               	movf	??_main+3,w
   470     003F  0080               	movwf	0
   471     0040  0AA8               	incf	??_main+1,f
   472     0041  0BA9               	decfsz	??_main+2,f
   473     0042  2836               	goto	u550
   474     0043                     l966:
   475                           
   476                           ;main.c: 59:     TRISB = 0x00; PORTB = 0x00;
   477     0043  1683               	bsf	3,5	;RP0=1, select bank1
   478     0044  1303               	bcf	3,6	;RP1=0, select bank1
   479     0045  0186               	clrf	6	;volatile
   480     0046                     l968:
   481     0046  1283               	bcf	3,5	;RP0=0, select bank0
   482     0047  1303               	bcf	3,6	;RP1=0, select bank0
   483     0048  0186               	clrf	6	;volatile
   484     0049                     l970:
   485                           
   486                           ;main.c: 60:     TRISC = 0x00; PORTC = 0x3F;
   487     0049  1683               	bsf	3,5	;RP0=1, select bank1
   488     004A  1303               	bcf	3,6	;RP1=0, select bank1
   489     004B  0187               	clrf	7	;volatile
   490     004C                     l972:
   491     004C  303F               	movlw	63
   492     004D  1283               	bcf	3,5	;RP0=0, select bank0
   493     004E  1303               	bcf	3,6	;RP1=0, select bank0
   494     004F  0087               	movwf	7	;volatile
   495     0050                     l974:
   496                           
   497                           ;main.c: 61:     TRISD7 = 1; TRISD6 = 1; TRISD5 = 1;
   498     0050  1683               	bsf	3,5	;RP0=1, select bank1
   499     0051  1303               	bcf	3,6	;RP1=0, select bank1
   500     0052  1788               	bsf	8,7	;volatile
   501     0053                     l976:
   502     0053  1708               	bsf	8,6	;volatile
   503     0054                     l978:
   504     0054  1688               	bsf	8,5	;volatile
   505     0055                     l980:
   506                           
   507                           ;main.c: 62:     preload = 15536;
   508     0055  30B0               	movlw	176
   509     0056  1283               	bcf	3,5	;RP0=0, select bank0
   510     0057  1303               	bcf	3,6	;RP1=0, select bank0
   511     0058  00C8               	movwf	_preload
   512     0059  303C               	movlw	60
   513     005A  00C9               	movwf	_preload+1
   514     005B                     l982:
   515                           
   516                           ;main.c: 63:     timer1_timermode(preload);
   517     005B  0848               	movf	_preload,w
   518     005C  120A  118A  22EF  120A  118A  	fcall	_timer1_timermode
   519     0061                     l984:
   520                           
   521                           ;main.c: 65:             if(RD5){
   522     0061  1283               	bcf	3,5	;RP0=0, select bank0
   523     0062  1303               	bcf	3,6	;RP1=0, select bank0
   524     0063  1E88               	btfss	8,5	;volatile
   525     0064  2866               	goto	u561
   526     0065  2867               	goto	u560
   527     0066                     u561:
   528     0066  2880               	goto	l992
   529     0067                     u560:
   530     0067                     l986:
   531                           
   532                           ;main.c: 66:                 _delay((unsigned long)((250)*(4000000/4000.0)));
   533     0067  3002               	movlw	2
   534     0068  1283               	bcf	3,5	;RP0=0, select bank0
   535     0069  1303               	bcf	3,6	;RP1=0, select bank0
   536     006A  00A9               	movwf	??_main+2
   537     006B  3045               	movlw	69
   538     006C  00A8               	movwf	??_main+1
   539     006D  30A9               	movlw	169
   540     006E  00A7               	movwf	??_main
   541     006F                     u597:
   542     006F  0BA7               	decfsz	??_main,f
   543     0070  286F               	goto	u597
   544     0071  0BA8               	decfsz	??_main+1,f
   545     0072  286F               	goto	u597
   546     0073  0BA9               	decfsz	??_main+2,f
   547     0074  286F               	goto	u597
   548                           
   549                           ;main.c: 67:                 TMR1ON = ~TMR1ON;
   550     0075  3001               	movlw	1
   551     0076  1283               	bcf	3,5	;RP0=0, select bank0
   552     0077  1303               	bcf	3,6	;RP1=0, select bank0
   553     0078  0690               	xorwf	16,f
   554     0079                     l988:
   555                           
   556                           ;main.c: 68:                 second = 0; counter = 0; preload = 15536;
   557     0079  01BF               	clrf	_second
   558     007A  01C0               	clrf	_second+1
   559     007B                     l990:
   560     007B  01C7               	clrf	_counter
   561     007C  30B0               	movlw	176
   562     007D  00C8               	movwf	_preload
   563     007E  303C               	movlw	60
   564     007F  00C9               	movwf	_preload+1
   565     0080                     l992:
   566                           
   567                           ;main.c: 70:         h1 = second / 100000;
   568     0080  3000               	movlw	0
   569     0081  00F6               	movwf	___aldiv@divisor+3
   570     0082  3001               	movlw	1
   571     0083  00F5               	movwf	___aldiv@divisor+2
   572     0084  3086               	movlw	134
   573     0085  00F4               	movwf	___aldiv@divisor+1
   574     0086  30A0               	movlw	160
   575     0087  00F3               	movwf	___aldiv@divisor
   576     0088  083F               	movf	_second,w
   577     0089  00F7               	movwf	___aldiv@dividend
   578     008A  0840               	movf	_second+1,w
   579     008B  00F8               	movwf	___aldiv@dividend+1
   580     008C  01F9               	clrf	___aldiv@dividend+2
   581     008D  01FA               	clrf	___aldiv@dividend+3
   582     008E  120A  118A  21AD  120A  118A  	fcall	___aldiv
   583     0093  0873               	movf	?___aldiv,w
   584     0094  1283               	bcf	3,5	;RP0=0, select bank0
   585     0095  1303               	bcf	3,6	;RP1=0, select bank0
   586     0096  00C6               	movwf	_h1
   587     0097                     l994:
   588                           
   589                           ;main.c: 71:         h2 = ((second / 10000)%10);
   590     0097  300A               	movlw	10
   591     0098  00A0               	movwf	___lwmod@divisor
   592     0099  3000               	movlw	0
   593     009A  00A1               	movwf	___lwmod@divisor+1
   594     009B  3010               	movlw	16
   595     009C  00F3               	movwf	___lwdiv@divisor
   596     009D  3027               	movlw	39
   597     009E  00F4               	movwf	___lwdiv@divisor+1
   598     009F  0840               	movf	_second+1,w
   599     00A0  00F6               	movwf	___lwdiv@dividend+1
   600     00A1  083F               	movf	_second,w
   601     00A2  00F5               	movwf	___lwdiv@dividend
   602     00A3  120A  118A  224A  120A  118A  	fcall	___lwdiv
   603     00A8  0874               	movf	?___lwdiv+1,w
   604     00A9  1283               	bcf	3,5	;RP0=0, select bank0
   605     00AA  1303               	bcf	3,6	;RP1=0, select bank0
   606     00AB  00A3               	movwf	___lwmod@dividend+1
   607     00AC  0873               	movf	?___lwdiv,w
   608     00AD  00A2               	movwf	___lwmod@dividend
   609     00AE  120A  118A  228E  120A  118A  	fcall	___lwmod
   610     00B3  1283               	bcf	3,5	;RP0=0, select bank0
   611     00B4  1303               	bcf	3,6	;RP1=0, select bank0
   612     00B5  0820               	movf	?___lwmod,w
   613     00B6  00C5               	movwf	_h2
   614     00B7                     l996:
   615                           
   616                           ;main.c: 72:         m1 = ((second / 1000)%10);
   617     00B7  300A               	movlw	10
   618     00B8  00A0               	movwf	___lwmod@divisor
   619     00B9  3000               	movlw	0
   620     00BA  00A1               	movwf	___lwmod@divisor+1
   621     00BB  30E8               	movlw	232
   622     00BC  00F3               	movwf	___lwdiv@divisor
   623     00BD  3003               	movlw	3
   624     00BE  00F4               	movwf	___lwdiv@divisor+1
   625     00BF  0840               	movf	_second+1,w
   626     00C0  00F6               	movwf	___lwdiv@dividend+1
   627     00C1  083F               	movf	_second,w
   628     00C2  00F5               	movwf	___lwdiv@dividend
   629     00C3  120A  118A  224A  120A  118A  	fcall	___lwdiv
   630     00C8  0874               	movf	?___lwdiv+1,w
   631     00C9  1283               	bcf	3,5	;RP0=0, select bank0
   632     00CA  1303               	bcf	3,6	;RP1=0, select bank0
   633     00CB  00A3               	movwf	___lwmod@dividend+1
   634     00CC  0873               	movf	?___lwdiv,w
   635     00CD  00A2               	movwf	___lwmod@dividend
   636     00CE  120A  118A  228E  120A  118A  	fcall	___lwmod
   637     00D3  1283               	bcf	3,5	;RP0=0, select bank0
   638     00D4  1303               	bcf	3,6	;RP1=0, select bank0
   639     00D5  0820               	movf	?___lwmod,w
   640     00D6  00C4               	movwf	_m1
   641     00D7                     l998:
   642                           
   643                           ;main.c: 73:         m2 = ((second / 100)%10);
   644     00D7  300A               	movlw	10
   645     00D8  00A0               	movwf	___lwmod@divisor
   646     00D9  3000               	movlw	0
   647     00DA  00A1               	movwf	___lwmod@divisor+1
   648     00DB  3064               	movlw	100
   649     00DC  00F3               	movwf	___lwdiv@divisor
   650     00DD  3000               	movlw	0
   651     00DE  00F4               	movwf	___lwdiv@divisor+1
   652     00DF  0840               	movf	_second+1,w
   653     00E0  00F6               	movwf	___lwdiv@dividend+1
   654     00E1  083F               	movf	_second,w
   655     00E2  00F5               	movwf	___lwdiv@dividend
   656     00E3  120A  118A  224A  120A  118A  	fcall	___lwdiv
   657     00E8  0874               	movf	?___lwdiv+1,w
   658     00E9  1283               	bcf	3,5	;RP0=0, select bank0
   659     00EA  1303               	bcf	3,6	;RP1=0, select bank0
   660     00EB  00A3               	movwf	___lwmod@dividend+1
   661     00EC  0873               	movf	?___lwdiv,w
   662     00ED  00A2               	movwf	___lwmod@dividend
   663     00EE  120A  118A  228E  120A  118A  	fcall	___lwmod
   664     00F3  1283               	bcf	3,5	;RP0=0, select bank0
   665     00F4  1303               	bcf	3,6	;RP1=0, select bank0
   666     00F5  0820               	movf	?___lwmod,w
   667     00F6  00C3               	movwf	_m2
   668     00F7                     l1000:
   669                           
   670                           ;main.c: 74:         s1 = ((second / 10)%10);
   671     00F7  300A               	movlw	10
   672     00F8  00A0               	movwf	___lwmod@divisor
   673     00F9  3000               	movlw	0
   674     00FA  00A1               	movwf	___lwmod@divisor+1
   675     00FB  300A               	movlw	10
   676     00FC  00F3               	movwf	___lwdiv@divisor
   677     00FD  3000               	movlw	0
   678     00FE  00F4               	movwf	___lwdiv@divisor+1
   679     00FF  0840               	movf	_second+1,w
   680     0100  00F6               	movwf	___lwdiv@dividend+1
   681     0101  083F               	movf	_second,w
   682     0102  00F5               	movwf	___lwdiv@dividend
   683     0103  120A  118A  224A  120A  118A  	fcall	___lwdiv
   684     0108  0874               	movf	?___lwdiv+1,w
   685     0109  1283               	bcf	3,5	;RP0=0, select bank0
   686     010A  1303               	bcf	3,6	;RP1=0, select bank0
   687     010B  00A3               	movwf	___lwmod@dividend+1
   688     010C  0873               	movf	?___lwdiv,w
   689     010D  00A2               	movwf	___lwmod@dividend
   690     010E  120A  118A  228E  120A  118A  	fcall	___lwmod
   691     0113  1283               	bcf	3,5	;RP0=0, select bank0
   692     0114  1303               	bcf	3,6	;RP1=0, select bank0
   693     0115  0820               	movf	?___lwmod,w
   694     0116  00C2               	movwf	_s1
   695     0117                     l1002:
   696                           
   697                           ;main.c: 75:         s2 = second % 10;
   698     0117  300A               	movlw	10
   699     0118  00A0               	movwf	___lwmod@divisor
   700     0119  3000               	movlw	0
   701     011A  00A1               	movwf	___lwmod@divisor+1
   702     011B  0840               	movf	_second+1,w
   703     011C  00A3               	movwf	___lwmod@dividend+1
   704     011D  083F               	movf	_second,w
   705     011E  00A2               	movwf	___lwmod@dividend
   706     011F  120A  118A  228E  120A  118A  	fcall	___lwmod
   707     0124  1283               	bcf	3,5	;RP0=0, select bank0
   708     0125  1303               	bcf	3,6	;RP1=0, select bank0
   709     0126  0820               	movf	?___lwmod,w
   710     0127  00C1               	movwf	_s2
   711     0128                     l1004:
   712                           
   713                           ;main.c: 76:         if(RD7){
   714     0128  1F88               	btfss	8,7	;volatile
   715     0129  292B               	goto	u571
   716     012A  292C               	goto	u570
   717     012B                     u571:
   718     012B  2933               	goto	l1010
   719     012C                     u570:
   720     012C                     l1006:
   721                           
   722                           ;main.c: 77:             second = 0; counter = 0; preload = 15536;
   723     012C  01BF               	clrf	_second
   724     012D  01C0               	clrf	_second+1
   725     012E  01C7               	clrf	_counter
   726     012F                     l1008:
   727     012F  30B0               	movlw	176
   728     0130  00C8               	movwf	_preload
   729     0131  303C               	movlw	60
   730     0132  00C9               	movwf	_preload+1
   731     0133                     l1010:
   732                           
   733                           ;main.c: 79:         if(RD6){
   734     0133  1F08               	btfss	8,6	;volatile
   735     0134  2936               	goto	u581
   736     0135  2937               	goto	u580
   737     0136                     u581:
   738     0136  2949               	goto	l1014
   739     0137                     u580:
   740     0137                     l1012:
   741                           
   742                           ;main.c: 80:             _delay((unsigned long)((250)*(4000000/4000.0)));
   743     0137  3002               	movlw	2
   744     0138  1283               	bcf	3,5	;RP0=0, select bank0
   745     0139  1303               	bcf	3,6	;RP1=0, select bank0
   746     013A  00A9               	movwf	??_main+2
   747     013B  3045               	movlw	69
   748     013C  00A8               	movwf	??_main+1
   749     013D  30A9               	movlw	169
   750     013E  00A7               	movwf	??_main
   751     013F                     u607:
   752     013F  0BA7               	decfsz	??_main,f
   753     0140  293F               	goto	u607
   754     0141  0BA8               	decfsz	??_main+1,f
   755     0142  293F               	goto	u607
   756     0143  0BA9               	decfsz	??_main+2,f
   757     0144  293F               	goto	u607
   758                           
   759                           ;main.c: 81:             TMR1ON = ~TMR1ON;
   760     0145  3001               	movlw	1
   761     0146  1283               	bcf	3,5	;RP0=0, select bank0
   762     0147  1303               	bcf	3,6	;RP1=0, select bank0
   763     0148  0690               	xorwf	16,f
   764     0149                     l1014:
   765                           
   766                           ;main.c: 83:         PORTB = hex_seg[h1];
   767     0149  0846               	movf	_h1,w
   768     014A  3E2B               	addlw	(low (main@hex_seg| 0))& (0+255)
   769     014B  0084               	movwf	4
   770     014C  1383               	bcf	3,7	;select IRP bank0
   771     014D  0800               	movf	0,w
   772     014E  0086               	movwf	6	;volatile
   773     014F                     l1016:
   774                           
   775                           ;main.c: 84:         RC0 = 0;
   776     014F  1007               	bcf	7,0	;volatile
   777     0150                     l1018:
   778                           
   779                           ;main.c: 85:         _delay((unsigned long)((150)*(4000000/4000000.0)));
   780     0150  3031               	movlw	49
   781     0151  1283               	bcf	3,5	;RP0=0, select bank0
   782     0152  1303               	bcf	3,6	;RP1=0, select bank0
   783     0153  00A7               	movwf	??_main
   784     0154                     u617:
   785     0154  0BA7               	decfsz	??_main,f
   786     0155  2954               	goto	u617
   787     0156                     l1020:
   788                           
   789                           ;main.c: 86:         RC0 = 1;
   790     0156  1283               	bcf	3,5	;RP0=0, select bank0
   791     0157  1303               	bcf	3,6	;RP1=0, select bank0
   792     0158  1407               	bsf	7,0	;volatile
   793                           
   794                           ;main.c: 87:         PORTB = hex_seg[h2];
   795     0159  0845               	movf	_h2,w
   796     015A  3E2B               	addlw	(low (main@hex_seg| 0))& (0+255)
   797     015B  0084               	movwf	4
   798     015C  1383               	bcf	3,7	;select IRP bank0
   799     015D  0800               	movf	0,w
   800     015E  0086               	movwf	6	;volatile
   801     015F                     l1022:
   802                           
   803                           ;main.c: 88:         RC1 = 0;
   804     015F  1087               	bcf	7,1	;volatile
   805     0160                     l1024:
   806                           
   807                           ;main.c: 89:         _delay((unsigned long)((150)*(4000000/4000000.0)));
   808     0160  3031               	movlw	49
   809     0161  1283               	bcf	3,5	;RP0=0, select bank0
   810     0162  1303               	bcf	3,6	;RP1=0, select bank0
   811     0163  00A7               	movwf	??_main
   812     0164                     u627:
   813     0164  0BA7               	decfsz	??_main,f
   814     0165  2964               	goto	u627
   815     0166                     l1026:
   816                           
   817                           ;main.c: 90:         RC1 = 1;
   818     0166  1283               	bcf	3,5	;RP0=0, select bank0
   819     0167  1303               	bcf	3,6	;RP1=0, select bank0
   820     0168  1487               	bsf	7,1	;volatile
   821     0169                     l1028:
   822                           
   823                           ;main.c: 91:         PORTB = hex_seg[m1];
   824     0169  0844               	movf	_m1,w
   825     016A  3E2B               	addlw	(low (main@hex_seg| 0))& (0+255)
   826     016B  0084               	movwf	4
   827     016C  1383               	bcf	3,7	;select IRP bank0
   828     016D  0800               	movf	0,w
   829     016E  0086               	movwf	6	;volatile
   830     016F                     l1030:
   831                           
   832                           ;main.c: 92:         RC2 = 0;
   833     016F  1107               	bcf	7,2	;volatile
   834                           
   835                           ;main.c: 93:         _delay((unsigned long)((150)*(4000000/4000000.0)));
   836     0170  3031               	movlw	49
   837     0171  1283               	bcf	3,5	;RP0=0, select bank0
   838     0172  1303               	bcf	3,6	;RP1=0, select bank0
   839     0173  00A7               	movwf	??_main
   840     0174                     u637:
   841     0174  0BA7               	decfsz	??_main,f
   842     0175  2974               	goto	u637
   843     0176                     l1032:
   844                           
   845                           ;main.c: 94:         RC2 = 1;
   846     0176  1283               	bcf	3,5	;RP0=0, select bank0
   847     0177  1303               	bcf	3,6	;RP1=0, select bank0
   848     0178  1507               	bsf	7,2	;volatile
   849     0179                     l1034:
   850                           
   851                           ;main.c: 95:         PORTB = hex_seg[m2];
   852     0179  0843               	movf	_m2,w
   853     017A  3E2B               	addlw	(low (main@hex_seg| 0))& (0+255)
   854     017B  0084               	movwf	4
   855     017C  1383               	bcf	3,7	;select IRP bank0
   856     017D  0800               	movf	0,w
   857     017E  0086               	movwf	6	;volatile
   858     017F                     l1036:
   859                           
   860                           ;main.c: 96:         RC3 = 0;
   861     017F  1187               	bcf	7,3	;volatile
   862     0180                     l1038:
   863                           
   864                           ;main.c: 97:         _delay((unsigned long)((150)*(4000000/4000000.0)));
   865     0180  3031               	movlw	49
   866     0181  1283               	bcf	3,5	;RP0=0, select bank0
   867     0182  1303               	bcf	3,6	;RP1=0, select bank0
   868     0183  00A7               	movwf	??_main
   869     0184                     u647:
   870     0184  0BA7               	decfsz	??_main,f
   871     0185  2984               	goto	u647
   872     0186                     l1040:
   873                           
   874                           ;main.c: 98:         RC3 = 1;
   875     0186  1283               	bcf	3,5	;RP0=0, select bank0
   876     0187  1303               	bcf	3,6	;RP1=0, select bank0
   877     0188  1587               	bsf	7,3	;volatile
   878                           
   879                           ;main.c: 99:         PORTB = hex_seg[s1];
   880     0189  0842               	movf	_s1,w
   881     018A  3E2B               	addlw	(low (main@hex_seg| 0))& (0+255)
   882     018B  0084               	movwf	4
   883     018C  1383               	bcf	3,7	;select IRP bank0
   884     018D  0800               	movf	0,w
   885     018E  0086               	movwf	6	;volatile
   886     018F                     l1042:
   887                           
   888                           ;main.c: 100:         RC4 = 0;
   889     018F  1207               	bcf	7,4	;volatile
   890     0190                     l1044:
   891                           
   892                           ;main.c: 101:         _delay((unsigned long)((150)*(4000000/4000000.0)));
   893     0190  3031               	movlw	49
   894     0191  1283               	bcf	3,5	;RP0=0, select bank0
   895     0192  1303               	bcf	3,6	;RP1=0, select bank0
   896     0193  00A7               	movwf	??_main
   897     0194                     u657:
   898     0194  0BA7               	decfsz	??_main,f
   899     0195  2994               	goto	u657
   900     0196                     l1046:
   901                           
   902                           ;main.c: 102:         RC4 = 1;
   903     0196  1283               	bcf	3,5	;RP0=0, select bank0
   904     0197  1303               	bcf	3,6	;RP1=0, select bank0
   905     0198  1607               	bsf	7,4	;volatile
   906     0199                     l1048:
   907                           
   908                           ;main.c: 103:         PORTB = hex_seg[s2];
   909     0199  0841               	movf	_s2,w
   910     019A  3E2B               	addlw	(low (main@hex_seg| 0))& (0+255)
   911     019B  0084               	movwf	4
   912     019C  1383               	bcf	3,7	;select IRP bank0
   913     019D  0800               	movf	0,w
   914     019E  0086               	movwf	6	;volatile
   915     019F                     l1050:
   916                           
   917                           ;main.c: 104:         RC5 = 0;
   918     019F  1287               	bcf	7,5	;volatile
   919                           
   920                           ;main.c: 105:         _delay((unsigned long)((150)*(4000000/4000000.0)));
   921     01A0  3031               	movlw	49
   922     01A1  1283               	bcf	3,5	;RP0=0, select bank0
   923     01A2  1303               	bcf	3,6	;RP1=0, select bank0
   924     01A3  00A7               	movwf	??_main
   925     01A4                     u667:
   926     01A4  0BA7               	decfsz	??_main,f
   927     01A5  29A4               	goto	u667
   928     01A6                     l1052:
   929                           
   930                           ;main.c: 106:         RC5 = 1;
   931     01A6  1283               	bcf	3,5	;RP0=0, select bank0
   932     01A7  1303               	bcf	3,6	;RP1=0, select bank0
   933     01A8  1687               	bsf	7,5	;volatile
   934     01A9  2861               	goto	l984
   935     01AA  120A  118A  280E   	ljmp	start
   936     01AD                     __end_of_main:
   937                           
   938                           	psect	text1
   939     02EF                     __ptext1:	
   940 ;; *************** function _timer1_timermode *****************
   941 ;; Defined at:
   942 ;;		line 20 in file "main.c"
   943 ;; Parameters:    Size  Location     Type
   944 ;;  preloaded       1    wreg     unsigned char 
   945 ;; Auto vars:     Size  Location     Type
   946 ;;  preloaded       1    5[COMMON] unsigned char 
   947 ;; Return value:  Size  Location     Type
   948 ;;                  1    wreg      void 
   949 ;; Registers used:
   950 ;;		wreg
   951 ;; Tracked objects:
   952 ;;		On entry : 0/0
   953 ;;		On exit  : 0/0
   954 ;;		Unchanged: 0/0
   955 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   956 ;;      Params:         0       0       0       0       0
   957 ;;      Locals:         1       0       0       0       0
   958 ;;      Temps:          2       0       0       0       0
   959 ;;      Totals:         3       0       0       0       0
   960 ;;Total ram usage:        3 bytes
   961 ;; Hardware stack levels used: 1
   962 ;; Hardware stack levels required when called: 1
   963 ;; This function calls:
   964 ;;		Nothing
   965 ;; This function is called by:
   966 ;;		_main
   967 ;; This function uses a non-reentrant model
   968 ;;
   969                           
   970     02EF                     _timer1_timermode:	
   971                           ;psect for function _timer1_timermode
   972                           
   973                           
   974                           ;incstack = 0
   975                           ; Regs used in _timer1_timermode: [wreg]
   976                           ;timer1_timermode@preloaded stored from wreg
   977     02EF  00F5               	movwf	timer1_timermode@preloaded
   978     02F0                     l846:
   979                           
   980                           ;main.c: 24:     TMR1CS = 0;
   981     02F0  1283               	bcf	3,5	;RP0=0, select bank0
   982     02F1  1303               	bcf	3,6	;RP1=0, select bank0
   983     02F2  1090               	bcf	16,1	;volatile
   984                           
   985                           ;main.c: 30:     T1CKPS0 = 0;
   986     02F3  1210               	bcf	16,4	;volatile
   987                           
   988                           ;main.c: 31:     T1CKPS1 = 0;
   989     02F4  1290               	bcf	16,5	;volatile
   990     02F5                     l848:
   991                           
   992                           ;main.c: 33:     TMR1 = preloaded;
   993     02F5  0875               	movf	timer1_timermode@preloaded,w
   994     02F6  00F3               	movwf	??_timer1_timermode
   995     02F7  01F4               	clrf	??_timer1_timermode+1
   996     02F8  0873               	movf	??_timer1_timermode,w
   997     02F9  008E               	movwf	14	;volatile
   998     02FA  0874               	movf	??_timer1_timermode+1,w
   999     02FB  008F               	movwf	15	;volatile
  1000     02FC                     l850:
  1001                           
  1002                           ;main.c: 35:     TMR1IE = 1;
  1003     02FC  1683               	bsf	3,5	;RP0=1, select bank1
  1004     02FD  1303               	bcf	3,6	;RP1=0, select bank1
  1005     02FE  140C               	bsf	12,0	;volatile
  1006     02FF                     l852:
  1007                           
  1008                           ;main.c: 36:     TMR1IF = 0;
  1009     02FF  1283               	bcf	3,5	;RP0=0, select bank0
  1010     0300  1303               	bcf	3,6	;RP1=0, select bank0
  1011     0301  100C               	bcf	12,0	;volatile
  1012     0302                     l854:
  1013                           
  1014                           ;main.c: 37:     GIE = 1;
  1015     0302  178B               	bsf	11,7	;volatile
  1016     0303                     l856:
  1017                           
  1018                           ;main.c: 38:     PEIE = 1;
  1019     0303  170B               	bsf	11,6	;volatile
  1020     0304                     l858:
  1021                           
  1022                           ;main.c: 42:     TMR1ON = 0;
  1023     0304  1010               	bcf	16,0	;volatile
  1024     0305                     l73:
  1025     0305  0008               	return
  1026     0306                     __end_of_timer1_timermode:
  1027                           
  1028                           	psect	text2
  1029     028E                     __ptext2:	
  1030 ;; *************** function ___lwmod *****************
  1031 ;; Defined at:
  1032 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\lwmod.c"
  1033 ;; Parameters:    Size  Location     Type
  1034 ;;  divisor         2    0[BANK0 ] unsigned int 
  1035 ;;  dividend        2    2[BANK0 ] unsigned int 
  1036 ;; Auto vars:     Size  Location     Type
  1037 ;;  counter         1   10[COMMON] unsigned char 
  1038 ;; Return value:  Size  Location     Type
  1039 ;;                  2    0[BANK0 ] unsigned int 
  1040 ;; Registers used:
  1041 ;;		wreg, status,2, status,0, btemp+1
  1042 ;; Tracked objects:
  1043 ;;		On entry : 0/0
  1044 ;;		On exit  : 0/0
  1045 ;;		Unchanged: 0/0
  1046 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1047 ;;      Params:         0       4       0       0       0
  1048 ;;      Locals:         1       0       0       0       0
  1049 ;;      Temps:          0       0       0       0       0
  1050 ;;      Totals:         1       4       0       0       0
  1051 ;;Total ram usage:        5 bytes
  1052 ;; Hardware stack levels used: 1
  1053 ;; Hardware stack levels required when called: 1
  1054 ;; This function calls:
  1055 ;;		Nothing
  1056 ;; This function is called by:
  1057 ;;		_main
  1058 ;; This function uses a non-reentrant model
  1059 ;;
  1060                           
  1061     028E                     ___lwmod:	
  1062                           ;psect for function ___lwmod
  1063                           
  1064     028E                     l928:	
  1065                           ;incstack = 0
  1066                           ; Regs used in ___lwmod: [wreg+status,2+status,0+btemp+1]
  1067                           
  1068     028E  1283               	bcf	3,5	;RP0=0, select bank0
  1069     028F  1303               	bcf	3,6	;RP1=0, select bank0
  1070     0290  0820               	movf	___lwmod@divisor,w
  1071     0291  0421               	iorwf	___lwmod@divisor+1,w
  1072     0292  1903               	btfsc	3,2
  1073     0293  2A95               	goto	u471
  1074     0294  2A96               	goto	u470
  1075     0295                     u471:
  1076     0295  2AC5               	goto	l946
  1077     0296                     u470:
  1078     0296                     l930:
  1079     0296  01FA               	clrf	___lwmod@counter
  1080     0297  0AFA               	incf	___lwmod@counter,f
  1081     0298  2AA4               	goto	l936
  1082     0299                     l932:
  1083     0299  3001               	movlw	1
  1084     029A                     u485:
  1085     029A  1003               	clrc
  1086     029B  0DA0               	rlf	___lwmod@divisor,f
  1087     029C  0DA1               	rlf	___lwmod@divisor+1,f
  1088     029D  3EFF               	addlw	-1
  1089     029E  1D03               	skipz
  1090     029F  2A9A               	goto	u485
  1091     02A0                     l934:
  1092     02A0  3001               	movlw	1
  1093     02A1  00FF               	movwf	btemp+1
  1094     02A2  087F               	movf	btemp+1,w
  1095     02A3  07FA               	addwf	___lwmod@counter,f
  1096     02A4                     l936:
  1097     02A4  1FA1               	btfss	___lwmod@divisor+1,7
  1098     02A5  2AA7               	goto	u491
  1099     02A6  2AA8               	goto	u490
  1100     02A7                     u491:
  1101     02A7  2A99               	goto	l932
  1102     02A8                     u490:
  1103     02A8                     l938:
  1104     02A8  0821               	movf	___lwmod@divisor+1,w
  1105     02A9  0223               	subwf	___lwmod@dividend+1,w
  1106     02AA  1D03               	skipz
  1107     02AB  2AAE               	goto	u505
  1108     02AC  0820               	movf	___lwmod@divisor,w
  1109     02AD  0222               	subwf	___lwmod@dividend,w
  1110     02AE                     u505:
  1111     02AE  1C03               	skipc
  1112     02AF  2AB1               	goto	u501
  1113     02B0  2AB2               	goto	u500
  1114     02B1                     u501:
  1115     02B1  2AB8               	goto	l942
  1116     02B2                     u500:
  1117     02B2                     l940:
  1118     02B2  0820               	movf	___lwmod@divisor,w
  1119     02B3  02A2               	subwf	___lwmod@dividend,f
  1120     02B4  0821               	movf	___lwmod@divisor+1,w
  1121     02B5  1C03               	skipc
  1122     02B6  03A3               	decf	___lwmod@dividend+1,f
  1123     02B7  02A3               	subwf	___lwmod@dividend+1,f
  1124     02B8                     l942:
  1125     02B8  3001               	movlw	1
  1126     02B9                     u515:
  1127     02B9  1003               	clrc
  1128     02BA  0CA1               	rrf	___lwmod@divisor+1,f
  1129     02BB  0CA0               	rrf	___lwmod@divisor,f
  1130     02BC  3EFF               	addlw	-1
  1131     02BD  1D03               	skipz
  1132     02BE  2AB9               	goto	u515
  1133     02BF                     l944:
  1134     02BF  3001               	movlw	1
  1135     02C0  02FA               	subwf	___lwmod@counter,f
  1136     02C1  1D03               	btfss	3,2
  1137     02C2  2AC4               	goto	u521
  1138     02C3  2AC5               	goto	u520
  1139     02C4                     u521:
  1140     02C4  2AA8               	goto	l938
  1141     02C5                     u520:
  1142     02C5                     l946:
  1143     02C5  0823               	movf	___lwmod@dividend+1,w
  1144     02C6  00A1               	movwf	?___lwmod+1
  1145     02C7  0822               	movf	___lwmod@dividend,w
  1146     02C8  00A0               	movwf	?___lwmod
  1147     02C9                     l470:
  1148     02C9  0008               	return
  1149     02CA                     __end_of___lwmod:
  1150                           
  1151                           	psect	text3
  1152     024A                     __ptext3:	
  1153 ;; *************** function ___lwdiv *****************
  1154 ;; Defined at:
  1155 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\lwdiv.c"
  1156 ;; Parameters:    Size  Location     Type
  1157 ;;  divisor         2    3[COMMON] unsigned int 
  1158 ;;  dividend        2    5[COMMON] unsigned int 
  1159 ;; Auto vars:     Size  Location     Type
  1160 ;;  quotient        2    7[COMMON] unsigned int 
  1161 ;;  counter         1    9[COMMON] unsigned char 
  1162 ;; Return value:  Size  Location     Type
  1163 ;;                  2    3[COMMON] unsigned int 
  1164 ;; Registers used:
  1165 ;;		wreg, status,2, status,0, btemp+1
  1166 ;; Tracked objects:
  1167 ;;		On entry : 0/0
  1168 ;;		On exit  : 0/0
  1169 ;;		Unchanged: 0/0
  1170 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1171 ;;      Params:         4       0       0       0       0
  1172 ;;      Locals:         3       0       0       0       0
  1173 ;;      Temps:          0       0       0       0       0
  1174 ;;      Totals:         7       0       0       0       0
  1175 ;;Total ram usage:        7 bytes
  1176 ;; Hardware stack levels used: 1
  1177 ;; Hardware stack levels required when called: 1
  1178 ;; This function calls:
  1179 ;;		Nothing
  1180 ;; This function is called by:
  1181 ;;		_main
  1182 ;; This function uses a non-reentrant model
  1183 ;;
  1184                           
  1185     024A                     ___lwdiv:	
  1186                           ;psect for function ___lwdiv
  1187                           
  1188     024A                     l902:	
  1189                           ;incstack = 0
  1190                           ; Regs used in ___lwdiv: [wreg+status,2+status,0+btemp+1]
  1191                           
  1192     024A  01F7               	clrf	___lwdiv@quotient
  1193     024B  01F8               	clrf	___lwdiv@quotient+1
  1194     024C                     l904:
  1195     024C  0873               	movf	___lwdiv@divisor,w
  1196     024D  0474               	iorwf	___lwdiv@divisor+1,w
  1197     024E  1903               	btfsc	3,2
  1198     024F  2A51               	goto	u401
  1199     0250  2A52               	goto	u400
  1200     0251                     u401:
  1201     0251  2A89               	goto	l924
  1202     0252                     u400:
  1203     0252                     l906:
  1204     0252  01F9               	clrf	___lwdiv@counter
  1205     0253  0AF9               	incf	___lwdiv@counter,f
  1206     0254  2A60               	goto	l912
  1207     0255                     l908:
  1208     0255  3001               	movlw	1
  1209     0256                     u415:
  1210     0256  1003               	clrc
  1211     0257  0DF3               	rlf	___lwdiv@divisor,f
  1212     0258  0DF4               	rlf	___lwdiv@divisor+1,f
  1213     0259  3EFF               	addlw	-1
  1214     025A  1D03               	skipz
  1215     025B  2A56               	goto	u415
  1216     025C                     l910:
  1217     025C  3001               	movlw	1
  1218     025D  00FF               	movwf	btemp+1
  1219     025E  087F               	movf	btemp+1,w
  1220     025F  07F9               	addwf	___lwdiv@counter,f
  1221     0260                     l912:
  1222     0260  1FF4               	btfss	___lwdiv@divisor+1,7
  1223     0261  2A63               	goto	u421
  1224     0262  2A64               	goto	u420
  1225     0263                     u421:
  1226     0263  2A55               	goto	l908
  1227     0264                     u420:
  1228     0264                     l914:
  1229     0264  3001               	movlw	1
  1230     0265                     u435:
  1231     0265  1003               	clrc
  1232     0266  0DF7               	rlf	___lwdiv@quotient,f
  1233     0267  0DF8               	rlf	___lwdiv@quotient+1,f
  1234     0268  3EFF               	addlw	-1
  1235     0269  1D03               	skipz
  1236     026A  2A65               	goto	u435
  1237     026B  0874               	movf	___lwdiv@divisor+1,w
  1238     026C  0276               	subwf	___lwdiv@dividend+1,w
  1239     026D  1D03               	skipz
  1240     026E  2A71               	goto	u445
  1241     026F  0873               	movf	___lwdiv@divisor,w
  1242     0270  0275               	subwf	___lwdiv@dividend,w
  1243     0271                     u445:
  1244     0271  1C03               	skipc
  1245     0272  2A74               	goto	u441
  1246     0273  2A75               	goto	u440
  1247     0274                     u441:
  1248     0274  2A7C               	goto	l920
  1249     0275                     u440:
  1250     0275                     l916:
  1251     0275  0873               	movf	___lwdiv@divisor,w
  1252     0276  02F5               	subwf	___lwdiv@dividend,f
  1253     0277  0874               	movf	___lwdiv@divisor+1,w
  1254     0278  1C03               	skipc
  1255     0279  03F6               	decf	___lwdiv@dividend+1,f
  1256     027A  02F6               	subwf	___lwdiv@dividend+1,f
  1257     027B                     l918:
  1258     027B  1477               	bsf	___lwdiv@quotient,0
  1259     027C                     l920:
  1260     027C  3001               	movlw	1
  1261     027D                     u455:
  1262     027D  1003               	clrc
  1263     027E  0CF4               	rrf	___lwdiv@divisor+1,f
  1264     027F  0CF3               	rrf	___lwdiv@divisor,f
  1265     0280  3EFF               	addlw	-1
  1266     0281  1D03               	skipz
  1267     0282  2A7D               	goto	u455
  1268     0283                     l922:
  1269     0283  3001               	movlw	1
  1270     0284  02F9               	subwf	___lwdiv@counter,f
  1271     0285  1D03               	btfss	3,2
  1272     0286  2A88               	goto	u461
  1273     0287  2A89               	goto	u460
  1274     0288                     u461:
  1275     0288  2A64               	goto	l914
  1276     0289                     u460:
  1277     0289                     l924:
  1278     0289  0878               	movf	___lwdiv@quotient+1,w
  1279     028A  00F4               	movwf	?___lwdiv+1
  1280     028B  0877               	movf	___lwdiv@quotient,w
  1281     028C  00F3               	movwf	?___lwdiv
  1282     028D                     l460:
  1283     028D  0008               	return
  1284     028E                     __end_of___lwdiv:
  1285                           
  1286                           	psect	text4
  1287     01AD                     __ptext4:	
  1288 ;; *************** function ___aldiv *****************
  1289 ;; Defined at:
  1290 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\aldiv.c"
  1291 ;; Parameters:    Size  Location     Type
  1292 ;;  divisor         4    3[COMMON] long 
  1293 ;;  dividend        4    7[COMMON] long 
  1294 ;; Auto vars:     Size  Location     Type
  1295 ;;  quotient        4    3[BANK0 ] long 
  1296 ;;  sign            1    2[BANK0 ] unsigned char 
  1297 ;;  counter         1    1[BANK0 ] unsigned char 
  1298 ;; Return value:  Size  Location     Type
  1299 ;;                  4    3[COMMON] long 
  1300 ;; Registers used:
  1301 ;;		wreg, status,2, status,0, btemp+1
  1302 ;; Tracked objects:
  1303 ;;		On entry : 0/0
  1304 ;;		On exit  : 0/0
  1305 ;;		Unchanged: 0/0
  1306 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1307 ;;      Params:         8       0       0       0       0
  1308 ;;      Locals:         0       6       0       0       0
  1309 ;;      Temps:          0       1       0       0       0
  1310 ;;      Totals:         8       7       0       0       0
  1311 ;;Total ram usage:       15 bytes
  1312 ;; Hardware stack levels used: 1
  1313 ;; Hardware stack levels required when called: 1
  1314 ;; This function calls:
  1315 ;;		Nothing
  1316 ;; This function is called by:
  1317 ;;		_main
  1318 ;; This function uses a non-reentrant model
  1319 ;;
  1320                           
  1321     01AD                     ___aldiv:	
  1322                           ;psect for function ___aldiv
  1323                           
  1324     01AD                     l860:	
  1325                           ;incstack = 0
  1326                           ; Regs used in ___aldiv: [wreg+status,2+status,0+btemp+1]
  1327                           
  1328     01AD  1283               	bcf	3,5	;RP0=0, select bank0
  1329     01AE  1303               	bcf	3,6	;RP1=0, select bank0
  1330     01AF  01A2               	clrf	___aldiv@sign
  1331     01B0                     l862:
  1332     01B0  1FF6               	btfss	___aldiv@divisor+3,7
  1333     01B1  29B3               	goto	u301
  1334     01B2  29B4               	goto	u300
  1335     01B3                     u301:
  1336     01B3  29C1               	goto	l245
  1337     01B4                     u300:
  1338     01B4                     l864:
  1339     01B4  09F3               	comf	___aldiv@divisor,f
  1340     01B5  09F4               	comf	___aldiv@divisor+1,f
  1341     01B6  09F5               	comf	___aldiv@divisor+2,f
  1342     01B7  09F6               	comf	___aldiv@divisor+3,f
  1343     01B8  0AF3               	incf	___aldiv@divisor,f
  1344     01B9  1903               	skipnz
  1345     01BA  0AF4               	incf	___aldiv@divisor+1,f
  1346     01BB  1903               	skipnz
  1347     01BC  0AF5               	incf	___aldiv@divisor+2,f
  1348     01BD  1903               	skipnz
  1349     01BE  0AF6               	incf	___aldiv@divisor+3,f
  1350     01BF  01A2               	clrf	___aldiv@sign
  1351     01C0  0AA2               	incf	___aldiv@sign,f
  1352     01C1                     l245:
  1353     01C1  1FFA               	btfss	___aldiv@dividend+3,7
  1354     01C2  29C4               	goto	u311
  1355     01C3  29C5               	goto	u310
  1356     01C4                     u311:
  1357     01C4  29D4               	goto	l870
  1358     01C5                     u310:
  1359     01C5                     l866:
  1360     01C5  09F7               	comf	___aldiv@dividend,f
  1361     01C6  09F8               	comf	___aldiv@dividend+1,f
  1362     01C7  09F9               	comf	___aldiv@dividend+2,f
  1363     01C8  09FA               	comf	___aldiv@dividend+3,f
  1364     01C9  0AF7               	incf	___aldiv@dividend,f
  1365     01CA  1903               	skipnz
  1366     01CB  0AF8               	incf	___aldiv@dividend+1,f
  1367     01CC  1903               	skipnz
  1368     01CD  0AF9               	incf	___aldiv@dividend+2,f
  1369     01CE  1903               	skipnz
  1370     01CF  0AFA               	incf	___aldiv@dividend+3,f
  1371     01D0                     l868:
  1372     01D0  3001               	movlw	1
  1373     01D1  00FF               	movwf	btemp+1
  1374     01D2  087F               	movf	btemp+1,w
  1375     01D3  06A2               	xorwf	___aldiv@sign,f
  1376     01D4                     l870:
  1377     01D4  3000               	movlw	0
  1378     01D5  00A6               	movwf	___aldiv@quotient+3
  1379     01D6  3000               	movlw	0
  1380     01D7  00A5               	movwf	___aldiv@quotient+2
  1381     01D8  3000               	movlw	0
  1382     01D9  00A4               	movwf	___aldiv@quotient+1
  1383     01DA  3000               	movlw	0
  1384     01DB  00A3               	movwf	___aldiv@quotient
  1385     01DC                     l872:
  1386     01DC  0876               	movf	___aldiv@divisor+3,w
  1387     01DD  0475               	iorwf	___aldiv@divisor+2,w
  1388     01DE  0474               	iorwf	___aldiv@divisor+1,w
  1389     01DF  0473               	iorwf	___aldiv@divisor,w
  1390     01E0  1903               	skipnz
  1391     01E1  29E3               	goto	u321
  1392     01E2  29E4               	goto	u320
  1393     01E3                     u321:
  1394     01E3  2A31               	goto	l894
  1395     01E4                     u320:
  1396     01E4                     l874:
  1397     01E4  01A1               	clrf	___aldiv@counter
  1398     01E5  0AA1               	incf	___aldiv@counter,f
  1399     01E6  29F4               	goto	l880
  1400     01E7                     l876:
  1401     01E7  3001               	movlw	1
  1402     01E8  00A0               	movwf	??___aldiv
  1403     01E9                     u335:
  1404     01E9  1003               	clrc
  1405     01EA  0DF3               	rlf	___aldiv@divisor,f
  1406     01EB  0DF4               	rlf	___aldiv@divisor+1,f
  1407     01EC  0DF5               	rlf	___aldiv@divisor+2,f
  1408     01ED  0DF6               	rlf	___aldiv@divisor+3,f
  1409     01EE  0BA0               	decfsz	??___aldiv,f
  1410     01EF  29E9               	goto	u335
  1411     01F0                     l878:
  1412     01F0  3001               	movlw	1
  1413     01F1  00FF               	movwf	btemp+1
  1414     01F2  087F               	movf	btemp+1,w
  1415     01F3  07A1               	addwf	___aldiv@counter,f
  1416     01F4                     l880:
  1417     01F4  1FF6               	btfss	___aldiv@divisor+3,7
  1418     01F5  29F7               	goto	u341
  1419     01F6  29F8               	goto	u340
  1420     01F7                     u341:
  1421     01F7  29E7               	goto	l876
  1422     01F8                     u340:
  1423     01F8                     l882:
  1424     01F8  3001               	movlw	1
  1425     01F9  00A0               	movwf	??___aldiv
  1426     01FA                     u355:
  1427     01FA  1003               	clrc
  1428     01FB  0DA3               	rlf	___aldiv@quotient,f
  1429     01FC  0DA4               	rlf	___aldiv@quotient+1,f
  1430     01FD  0DA5               	rlf	___aldiv@quotient+2,f
  1431     01FE  0DA6               	rlf	___aldiv@quotient+3,f
  1432     01FF  0BA0               	decfsz	??___aldiv,f
  1433     0200  29FA               	goto	u355
  1434     0201                     l884:
  1435     0201  0876               	movf	___aldiv@divisor+3,w
  1436     0202  027A               	subwf	___aldiv@dividend+3,w
  1437     0203  1D03               	skipz
  1438     0204  2A0F               	goto	u365
  1439     0205  0875               	movf	___aldiv@divisor+2,w
  1440     0206  0279               	subwf	___aldiv@dividend+2,w
  1441     0207  1D03               	skipz
  1442     0208  2A0F               	goto	u365
  1443     0209  0874               	movf	___aldiv@divisor+1,w
  1444     020A  0278               	subwf	___aldiv@dividend+1,w
  1445     020B  1D03               	skipz
  1446     020C  2A0F               	goto	u365
  1447     020D  0873               	movf	___aldiv@divisor,w
  1448     020E  0277               	subwf	___aldiv@dividend,w
  1449     020F                     u365:
  1450     020F  1C03               	skipc
  1451     0210  2A12               	goto	u361
  1452     0211  2A13               	goto	u360
  1453     0212                     u361:
  1454     0212  2A22               	goto	l890
  1455     0213                     u360:
  1456     0213                     l886:
  1457     0213  0873               	movf	___aldiv@divisor,w
  1458     0214  02F7               	subwf	___aldiv@dividend,f
  1459     0215  0874               	movf	___aldiv@divisor+1,w
  1460     0216  1C03               	skipc
  1461     0217  0F74               	incfsz	___aldiv@divisor+1,w
  1462     0218  02F8               	subwf	___aldiv@dividend+1,f
  1463     0219  0875               	movf	___aldiv@divisor+2,w
  1464     021A  1C03               	skipc
  1465     021B  0F75               	incfsz	___aldiv@divisor+2,w
  1466     021C  02F9               	subwf	___aldiv@dividend+2,f
  1467     021D  0876               	movf	___aldiv@divisor+3,w
  1468     021E  1C03               	skipc
  1469     021F  0F76               	incfsz	___aldiv@divisor+3,w
  1470     0220  02FA               	subwf	___aldiv@dividend+3,f
  1471     0221                     l888:
  1472     0221  1423               	bsf	___aldiv@quotient,0
  1473     0222                     l890:
  1474     0222  3001               	movlw	1
  1475     0223                     u375:
  1476     0223  1003               	clrc
  1477     0224  0CF6               	rrf	___aldiv@divisor+3,f
  1478     0225  0CF5               	rrf	___aldiv@divisor+2,f
  1479     0226  0CF4               	rrf	___aldiv@divisor+1,f
  1480     0227  0CF3               	rrf	___aldiv@divisor,f
  1481     0228  3EFF               	addlw	-1
  1482     0229  1D03               	skipz
  1483     022A  2A23               	goto	u375
  1484     022B                     l892:
  1485     022B  3001               	movlw	1
  1486     022C  02A1               	subwf	___aldiv@counter,f
  1487     022D  1D03               	btfss	3,2
  1488     022E  2A30               	goto	u381
  1489     022F  2A31               	goto	u380
  1490     0230                     u381:
  1491     0230  29F8               	goto	l882
  1492     0231                     u380:
  1493     0231                     l894:
  1494     0231  0822               	movf	___aldiv@sign,w
  1495     0232  1903               	btfsc	3,2
  1496     0233  2A35               	goto	u391
  1497     0234  2A36               	goto	u390
  1498     0235                     u391:
  1499     0235  2A41               	goto	l898
  1500     0236                     u390:
  1501     0236                     l896:
  1502     0236  09A3               	comf	___aldiv@quotient,f
  1503     0237  09A4               	comf	___aldiv@quotient+1,f
  1504     0238  09A5               	comf	___aldiv@quotient+2,f
  1505     0239  09A6               	comf	___aldiv@quotient+3,f
  1506     023A  0AA3               	incf	___aldiv@quotient,f
  1507     023B  1903               	skipnz
  1508     023C  0AA4               	incf	___aldiv@quotient+1,f
  1509     023D  1903               	skipnz
  1510     023E  0AA5               	incf	___aldiv@quotient+2,f
  1511     023F  1903               	skipnz
  1512     0240  0AA6               	incf	___aldiv@quotient+3,f
  1513     0241                     l898:
  1514     0241  0826               	movf	___aldiv@quotient+3,w
  1515     0242  00F6               	movwf	?___aldiv+3
  1516     0243  0825               	movf	___aldiv@quotient+2,w
  1517     0244  00F5               	movwf	?___aldiv+2
  1518     0245  0824               	movf	___aldiv@quotient+1,w
  1519     0246  00F4               	movwf	?___aldiv+1
  1520     0247  0823               	movf	___aldiv@quotient,w
  1521     0248  00F3               	movwf	?___aldiv
  1522     0249                     l255:
  1523     0249  0008               	return
  1524     024A                     __end_of___aldiv:
  1525                           
  1526                           	psect	text5
  1527     02CA                     __ptext5:	
  1528 ;; *************** function _ISR *****************
  1529 ;; Defined at:
  1530 ;;		line 44 in file "main.c"
  1531 ;; Parameters:    Size  Location     Type
  1532 ;;		None
  1533 ;; Auto vars:     Size  Location     Type
  1534 ;;		None
  1535 ;; Return value:  Size  Location     Type
  1536 ;;                  1    wreg      void 
  1537 ;; Registers used:
  1538 ;;		wreg, status,2, status,0, btemp+1
  1539 ;; Tracked objects:
  1540 ;;		On entry : 0/0
  1541 ;;		On exit  : 0/0
  1542 ;;		Unchanged: 0/0
  1543 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1544 ;;      Params:         0       0       0       0       0
  1545 ;;      Locals:         0       0       0       0       0
  1546 ;;      Temps:          3       0       0       0       0
  1547 ;;      Totals:         3       0       0       0       0
  1548 ;;Total ram usage:        3 bytes
  1549 ;; Hardware stack levels used: 1
  1550 ;; This function calls:
  1551 ;;		Nothing
  1552 ;; This function is called by:
  1553 ;;		Interrupt level 1
  1554 ;; This function uses a non-reentrant model
  1555 ;;
  1556                           
  1557     02CA                     _ISR:	
  1558                           ;psect for function _ISR
  1559                           
  1560     02CA                     i1l950:
  1561                           
  1562                           ;main.c: 45:     if(TMR1IF){
  1563     02CA  1283               	bcf	3,5	;RP0=0, select bank0
  1564     02CB  1303               	bcf	3,6	;RP1=0, select bank0
  1565     02CC  1C0C               	btfss	12,0	;volatile
  1566     02CD  2ACF               	goto	u53_21
  1567     02CE  2AD0               	goto	u53_20
  1568     02CF                     u53_21:
  1569     02CF  2AE6               	goto	i1l81
  1570     02D0                     u53_20:
  1571     02D0                     i1l952:
  1572                           
  1573                           ;main.c: 46:         TMR1 = preload;
  1574     02D0  0849               	movf	_preload+1,w
  1575     02D1  008F               	movwf	15	;volatile
  1576     02D2  0848               	movf	_preload,w
  1577     02D3  008E               	movwf	14	;volatile
  1578     02D4                     i1l954:
  1579                           
  1580                           ;main.c: 47:         counter++;
  1581     02D4  3001               	movlw	1
  1582     02D5  00FF               	movwf	btemp+1
  1583     02D6  087F               	movf	btemp+1,w
  1584     02D7  07C7               	addwf	_counter,f
  1585     02D8                     i1l956:
  1586                           
  1587                           ;main.c: 48:         if(counter == 20){
  1588     02D8  3014               	movlw	20
  1589     02D9  0647               	xorwf	_counter,w
  1590     02DA  1D03               	btfss	3,2
  1591     02DB  2ADD               	goto	u54_21
  1592     02DC  2ADE               	goto	u54_20
  1593     02DD                     u54_21:
  1594     02DD  2AE5               	goto	i1l962
  1595     02DE                     u54_20:
  1596     02DE                     i1l958:
  1597                           
  1598                           ;main.c: 49:             second++;
  1599     02DE  3001               	movlw	1
  1600     02DF  07BF               	addwf	_second,f
  1601     02E0  1803               	skipnc
  1602     02E1  0AC0               	incf	_second+1,f
  1603     02E2  3000               	movlw	0
  1604     02E3  07C0               	addwf	_second+1,f
  1605     02E4                     i1l80:	
  1606                           ;main.c: 50:             if(second == 999999) second = 0;
  1607                           
  1608                           
  1609                           ;main.c: 51:             counter = 0;
  1610     02E4  01C7               	clrf	_counter
  1611     02E5                     i1l962:
  1612                           
  1613                           ;main.c: 53:         TMR1IF = 0;
  1614     02E5  100C               	bcf	12,0	;volatile
  1615     02E6                     i1l81:
  1616     02E6  0872               	movf	??_ISR+2,w
  1617     02E7  00FF               	movwf	btemp+1
  1618     02E8  0871               	movf	??_ISR+1,w
  1619     02E9  008A               	movwf	10
  1620     02EA  0E70               	swapf	??_ISR,w
  1621     02EB  0083               	movwf	3
  1622     02EC  0EFE               	swapf	btemp,f
  1623     02ED  0E7E               	swapf	btemp,w
  1624     02EE  0009               	retfie
  1625     02EF                     __end_of_ISR:
  1626     007E                     btemp	set	126	;btemp
  1627     007E                     wtemp0	set	126
  1628                           
  1629                           	psect	intentry
  1630     0004                     __pintentry:	
  1631                           ;incstack = 0
  1632                           ; Regs used in _ISR: [wreg+status,2+status,0+btemp+1]
  1633                           
  1634     0004                     interrupt_function:
  1635     007E                     saved_w	set	btemp
  1636     0004  00FE               	movwf	btemp
  1637     0005  0E03               	swapf	3,w
  1638     0006  00F0               	movwf	??_ISR
  1639     0007  080A               	movf	10,w
  1640     0008  00F1               	movwf	??_ISR+1
  1641     0009  087F               	movf	btemp+1,w
  1642     000A  00F2               	movwf	??_ISR+2
  1643     000B  120A  118A  2ACA   	ljmp	_ISR
  1644                           
  1645                           	psect	config
  1646                           
  1647                           ;Config register CONFIG @ 0x2007
  1648                           ;	Oscillator Selection bits
  1649                           ;	FOSC = XT, XT oscillator
  1650                           ;	Watchdog Timer Enable bit
  1651                           ;	WDTE = OFF, WDT disabled
  1652                           ;	Power-up Timer Enable bit
  1653                           ;	PWRTE = ON, PWRT enabled
  1654                           ;	Brown-out Reset Enable bit
  1655                           ;	BOREN = ON, BOR enabled
  1656                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  1657                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
  1658                           ;	Data EEPROM Memory Code Protection bit
  1659                           ;	CPD = OFF, Data EEPROM code protection off
  1660                           ;	Flash Program Memory Write Enable bits
  1661                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
  1662                           ;	In-Circuit Debugger Mode bit
  1663                           ;	DEBUG = 0x1, unprogrammed default
  1664                           ;	Flash Program Memory Code Protection bit
  1665                           ;	CP = OFF, Code protection off
  1666     2007                     	org	8199
  1667     2007  3F71               	dw	16241

Data Sizes:
    Strings     0
    Constant    0
    Data        10
    BSS         9
    Persistent  2
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     11      11
    BANK0            80     21      42
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->___aldiv
    _main->___lwmod
    ___lwmod->___lwdiv

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    _main->___aldiv

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                14    14      0    2302
                                              7 BANK0     14    14      0
                            ___aldiv
                            ___lwdiv
                            ___lwmod
                   _timer1_timermode
 ---------------------------------------------------------------------------------
 (1) _timer1_timermode                                     3     3      0      22
                                              3 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) ___lwmod                                              5     1      4     919
                                             10 COMMON     1     1      0
                                              0 BANK0      4     0      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (1) ___lwdiv                                              7     3      4     770
                                              3 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (1) ___aldiv                                             15     7      8     452
                                              3 COMMON     8     0      8
                                              0 BANK0      7     7      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _ISR                                                  3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___aldiv
   ___lwdiv
   ___lwmod
     ___lwdiv (ARG)
   _timer1_timermode

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     15      2A       5       52.5%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      B       B       1       78.6%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      35      12        0.0%
ABS                  0      0      35       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Mon Nov 06 20:03:12 2023

                        pc 0002                         l73 0305                         _h1 0046  
                       _h2 0045                         _m1 0044                         _m2 0043  
                       _s1 0042                         _s2 0041                         fsr 0004  
                      l245 01C1                        l255 0249                        l460 028D  
                      l470 02C9                        l910 025C                        l902 024A  
                      l920 027C                        l912 0260                        l904 024C  
                      l922 0283                        l914 0264                        l906 0252  
                      l930 0296                        l850 02FC                        l860 01AD  
                      l916 0275                        l908 0255                        l924 0289  
                      l940 02B2                        l932 0299                        l852 02FF  
                      l870 01D4                        l862 01B0                        l918 027B  
                      l942 02B8                        l934 02A0                        l854 0302  
                      l846 02F0                        l880 01F4                        l872 01DC  
                      l864 01B4                        l944 02BF                        l936 02A4  
                      l928 028E                        l856 0303                        l848 02F5  
                      l890 0222                        l882 01F8                        l874 01E4  
                      l866 01C5                        l938 02A8                        l946 02C5  
                      l858 0304                        l970 0049                        l892 022B  
                      l884 0201                        l876 01E7                        l868 01D0  
                      l980 0055                        l972 004C                        l964 002C  
                      l886 0213                        l878 01F0                        l894 0231  
                      l990 007B                        l982 005B                        l974 0050  
                      l966 0043                        l896 0236                        l888 0221  
                      l992 0080                        l984 0061                        l976 0053  
                      l968 0046                        l898 0241                        l994 0097  
                      l986 0067                        l978 0054                        _GIE 005F  
                      l996 00B7                        l988 0079                        l998 00D7  
                      _RC0 0038                        _RC1 0039                        _RC2 003A  
                      _RC3 003B                        _RC4 003C                        _RC5 003D  
                      _RD5 0045                        _RD6 0046                        _RD7 0047  
                      u300 01B4                        u301 01B3                        u310 01C5  
                      u311 01C4                        u320 01E4                        u400 0252  
                      u321 01E3                        u401 0251                        u340 01F8  
                      u420 0264                        u500 02B2                        u341 01F7  
                      u421 0263                        u501 02B1                        u335 01E9  
                      u415 0256                        u360 0213                        u440 0275  
                      u520 02C5                        u361 0212                        u441 0274  
                      u521 02C4                        u505 02AE                        u355 01FA  
                      u435 0265                        u515 02B9                        u380 0231  
                      u460 0289                        _ISR 02CA                        u381 0230  
                      u365 020F                        u461 0288                        u445 0271  
                      u390 0236                        u470 0296                        u550 0036  
                      u391 0235                        u375 0223                        u455 027D  
                      u471 0295                        u607 013F                        u560 0067  
                      u617 0154                        u561 0066                        u490 02A8  
                      u570 012C                        u491 02A7                        u627 0164  
                      u571 012B                        u580 0137                        u485 029A  
                      u637 0174                        u581 0136                        u647 0184  
                      u657 0194                        u667 01A4                        u597 006F  
                      fsr0 0004                        indf 0000                       ?_ISR 0070  
                     l1000 00F7                       l1010 0133                       l1002 0117  
                     l1020 0156                       l1012 0137                       l1004 0128  
                     l1030 016F                       l1022 015F                       l1014 0149  
                     l1006 012C                       l1040 0186                       l1032 0176  
                     l1024 0160                       l1016 014F                       l1008 012F  
                     l1050 019F                       l1042 018F                       l1034 0179  
                     l1026 0166                       l1018 0150                       l1052 01A6  
                     l1044 0190                       l1036 017F                       l1028 0169  
                     l1046 0196                       l1038 0180                       l1048 0199  
              main@hex_seg 002B                       _PEIE 005E                       i1l80 02E4  
                     i1l81 02E6                       _TMR1 000E                       _main 002C  
                     btemp 007E                       start 000E                      ??_ISR 0070  
          __end_of___aldiv 024A                      ?_main 0070            __end_of___lwdiv 028E  
          __end_of___lwmod 02CA                      i1l950 02CA                      i1l952 02D0  
                    i1l962 02E5                      i1l954 02D4                      i1l956 02D8  
                    i1l958 02DE                      _PORTB 0006                      _PORTC 0007  
                    u53_20 02D0                      u53_21 02CF                      u54_20 02DE  
                    u54_21 02DD                      _TRISB 0086                      _TRISC 0087  
                    pclath 000A                      status 0003                      wtemp0 007E  
          __initialization 0011               __end_of_main 01AD                     ??_main 0027  
timer1_timermode@preloaded 0075                     _TMR1IE 0460                     _TMR1IF 0060  
                   _TMR1CS 0081                     _TMR1ON 0080                     _TRISD5 0445  
                   _TRISD6 0446                     _TRISD7 0447                  ??___aldiv 0020  
                ??___lwdiv 0077                  ??___lwmod 007A                     _second 003F  
         _timer1_timermode 02EF                     saved_w 007E    __end_of__initialization 0028  
           __pcstackCOMMON 0070               __pidataBANK0 0319                 __pbssBANK0 003F  
               __pmaintext 002C                 __pintentry 0004                    _T1CKPS0 0084  
                  _T1CKPS1 0085                    ___aldiv 01AD                    ___lwdiv 024A  
                  ___lwmod 028E                    __ptext1 02EF                    __ptext2 028E  
                  __ptext3 024A                    __ptext4 01AD                    __ptext5 02CA  
                  _counter 0047           ___aldiv@dividend 0077                    _preload 0048  
     end_of_initialization 0028   __end_of_timer1_timermode 0306           ___aldiv@quotient 0023  
      start_initialization 0011                __end_of_ISR 02EF                 init_fetch0 0306  
              __pdataBANK0 0035                  ___latbits 0002              __pcstackBANK0 0020  
                __pnvBANK0 0048           ___lwdiv@dividend 0075                   ?___aldiv 0073  
                 ?___lwdiv 0073                   ?___lwmod 0020           ___lwdiv@quotient 0077  
          ___aldiv@divisor 0073          interrupt_function 0004            ___aldiv@counter 0021  
        ?_timer1_timermode 0070                  main@F1019 0035         ??_timer1_timermode 0073  
          ___lwdiv@divisor 0073            ___lwdiv@counter 0079                   init_ram0 030A  
                 intlevel1 0000           ___lwmod@dividend 0022            ___lwmod@divisor 0020  
          ___lwmod@counter 007A               ___aldiv@sign 0022  
